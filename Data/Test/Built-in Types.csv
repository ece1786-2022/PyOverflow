Id,Body,Title,Tags,text
1979004, ,"What is the difference between isinstance('aaa', basestring) and isinstance('aaa', str)?",<python><python-2.x><built-in-types>,"What is the difference between isinstance('aaa', basestring) and isinstance('aaa', str)?  "
4092674,"[Python 3.1]  I'm following up on this answer:    I know I need to keep track of my float literals (i.e., replace  with  , etc.), and that's fine.  But whenever I do any calculations,  objects get converted into .  What's the easiest way to fix it?  EDIT:  I need exactly two decimal digits; and I need it across the whole code, including where I print a dictionary with  values inside. That makes any formatting functions hard to use.  I can't use  global setting, since I want computations to be at full precision (just printing at 2 decimal points).  @Glenn Maynard: I agree I shouldn't override ; if anything, it would be just . But it's a moot point because of the following point.  @Glenn Maynard and @singularity: I won't subclass , since I agree it will look very ugly in the end.  I will stop trying to be clever, and just call a function everywhere a  is being printed. Though I am really sad that I can't override  in the builtin class .  Thank you! ",subclassing float to force fixed point printing precision in python,<python><floating-point><python-3.x><subclass><built-in-types>,"subclassing float to force fixed point printing precision in python [Python 3.1]  I'm following up on this answer:    I know I need to keep track of my float literals (i.e., replace  with  , etc.), and that's fine.  But whenever I do any calculations,  objects get converted into .  What's the easiest way to fix it?  EDIT:  I need exactly two decimal digits; and I need it across the whole code, including where I print a dictionary with  values inside. That makes any formatting functions hard to use.  I can't use  global setting, since I want computations to be at full precision (just printing at 2 decimal points).  @Glenn Maynard: I agree I shouldn't override ; if anything, it would be just . But it's a moot point because of the following point.  @Glenn Maynard and @singularity: I won't subclass , since I agree it will look very ugly in the end.  I will stop trying to be clever, and just call a function everywhere a  is being printed. Though I am really sad that I can't override  in the builtin class .  Thank you! "
4698493,"For example&mdash;say I want to add a  method to Python's dict type. Can I do this?  JavaScript has a prototype object that behaves this way. Maybe it's bad design and I should subclass the dict object, but then it only works on the subclasses and I want it to work on any and all future dictionaries.  Here's how it would go down in JavaScript:    Here's a useful link with more examples&mdash; http://www.javascriptkit.com/javatutors/proto3.shtml ",Can I add custom methods/attributes to built-in Python types?,<python><custom-attributes><monkeypatching><built-in-types>,"Can I add custom methods/attributes to built-in Python types? For example&mdash;say I want to add a  method to Python's dict type. Can I do this?  JavaScript has a prototype object that behaves this way. Maybe it's bad design and I should subclass the dict object, but then it only works on the subclasses and I want it to work on any and all future dictionaries.  Here's how it would go down in JavaScript:    Here's a useful link with more examples&mdash; http://www.javascriptkit.com/javatutors/proto3.shtml "
4827303,  would result in     TypeError: tuple() takes at most 1   argument (2 given)   Why? What should I do instead? ,problem subclassing builtin type,<python><python-3.x><subclassing><built-in-types>,problem subclassing builtin type   would result in     TypeError: tuple() takes at most 1   argument (2 given)   Why? What should I do instead? 
4850370,Can someone explain the following behaviour:    This is surprising to me that you can alter the constructor of a frozen set whereas it is not possible for the constructor of a mutable set. ,Inheriting behaviours for set and frozenset seem to differ,<python><inheritance><immutability><built-in-types>,Inheriting behaviours for set and frozenset seem to differ Can someone explain the following behaviour:    This is surprising to me that you can alter the constructor of a frozen set whereas it is not possible for the constructor of a mutable set. 
6049533,I have always been confused and falling over the minute details while inheriting the builtin types in Python e.g. list and dict.  Can you please point to the tutorials and docs which give a comprehensive details about the internals and the syntax involved. ,Python: Inheriting builtin types dict and list,<python><inheritance><built-in><built-in-types>,Python: Inheriting builtin types dict and list I have always been confused and falling over the minute details while inheriting the builtin types in Python e.g. list and dict.  Can you please point to the tutorials and docs which give a comprehensive details about the internals and the syntax involved. 
6217351,"Is it possible to redefine which object the brackets [] use?  I can subclass the  object, but how to I make the interpreter use my subclass in place of the buildin list object? Is it possible?   (I'm pretty sure I'm using the wrong terms for the question- feel free to edit)    I don't have a practical use for this- just curious.  ",Redefining Pythons builtin datatypes,<python><list><object><subclass><built-in-types>,"Redefining Pythons builtin datatypes Is it possible to redefine which object the brackets [] use?  I can subclass the  object, but how to I make the interpreter use my subclass in place of the buildin list object? Is it possible?   (I'm pretty sure I'm using the wrong terms for the question- feel free to edit)    I don't have a practical use for this- just curious.  "
7402573,"In my application I have generated a number of values (three columns, of type int, str and datetime, see example below) and these values are stored in a flat file as comma-separated strings. Furthermore, I store a file containing the type of the values (see below). Now, how can I use this information to cast my values from the flat file to the correct data type in Python? Is is possible or do I need to do some other stuff?  Data file:    Type file:      ",use type() information to cast values stored as strings,<python><casting><data-conversion><built-in-types>,"use type() information to cast values stored as strings In my application I have generated a number of values (three columns, of type int, str and datetime, see example below) and these values are stored in a flat file as comma-separated strings. Furthermore, I store a file containing the type of the values (see below). Now, how can I use this information to cast my values from the flat file to the correct data type in Python? Is is possible or do I need to do some other stuff?  Data file:    Type file:      "
7983243,"When subclassing builtin types, I noticed a rather important difference between Python 2 and Python 3 in the return type of the methods of the built-in types. The following code illustrates this for sets:    With Python 2, all the return values are of type . With Python 3, the return types are . I could not find any documentation on what the result is supposed to be, nor any documentation about the change in Python 3.  Anyway, what I really care about is this: is there a simple way in Python 3 to get the behavior seen in Python 2, without redefining every single method of the built-in types? ",Subclassing builtin types in Python 2 and Python 3,<python><python-3.x><subclass><built-in-types>,"Subclassing builtin types in Python 2 and Python 3 When subclassing builtin types, I noticed a rather important difference between Python 2 and Python 3 in the return type of the methods of the built-in types. The following code illustrates this for sets:    With Python 2, all the return values are of type . With Python 3, the return types are . I could not find any documentation on what the result is supposed to be, nor any documentation about the change in Python 3.  Anyway, what I really care about is this: is there a simple way in Python 3 to get the behavior seen in Python 2, without redefining every single method of the built-in types? "
9486564,"I've never really liked the way the dictionary class is converted into a string so I wrote a subclass which overrides the  method (this method uses tabs to representing the level of nesting in the dictionary, mostly because I have some dictionaries which can be very big and end up ).  It works fine, but it doesn't allow me to use the  syntax to make my dictionaries.  Is it possible to override the dict class such that I can use the  syntax to make my own custom dictionaries?   I am using python 2.6/2.7. ","Override built-in classes, in particular, dictionary class",<python><python-2.7><dictionary><overriding><built-in-types>,"Override built-in classes, in particular, dictionary class I've never really liked the way the dictionary class is converted into a string so I wrote a subclass which overrides the  method (this method uses tabs to representing the level of nesting in the dictionary, mostly because I have some dictionaries which can be very big and end up ).  It works fine, but it doesn't allow me to use the  syntax to make my dictionaries.  Is it possible to override the dict class such that I can use the  syntax to make my own custom dictionaries?   I am using python 2.6/2.7. "
13736718,"While looking over some code in Think Complexity, I noticed their  class assigning values to itself.  I've copied a few important lines from that class and written an example class, , that fails at this behavior.    I'm sure the different built in types all have their own way of using this, but I'm not sure whether this is something I should try to build into my classes.  Is it possible, and how?  Is this something I shouldn't bother with, relying instead on simple composition, e.g. ?  Should it be avoided outside built in types?  I ask because I was told ""You should almost never inherit from the builtin python collections""; advice I'm hesitant to restrict myself to.  To clarify, I know that  won't ""work"", and I could easily make it ""work"", but I'm curious about the inner workings of these built in types that makes their interface different from a child of . ",How to make python class support item assignment?,<python><inheritance><built-in-types><object-composition>,"How to make python class support item assignment? While looking over some code in Think Complexity, I noticed their  class assigning values to itself.  I've copied a few important lines from that class and written an example class, , that fails at this behavior.    I'm sure the different built in types all have their own way of using this, but I'm not sure whether this is something I should try to build into my classes.  Is it possible, and how?  Is this something I shouldn't bother with, relying instead on simple composition, e.g. ?  Should it be avoided outside built in types?  I ask because I was told ""You should almost never inherit from the builtin python collections""; advice I'm hesitant to restrict myself to.  To clarify, I know that  won't ""work"", and I could easily make it ""work"", but I'm curious about the inner workings of these built in types that makes their interface different from a child of . "
14484749,"What's wrong with this code?    When I create an instance of  with, for example, , and then I print this instance, all I get is an empty list . If  is subclassing , isn't  a  itself?  NB: both in Python 2.x and 3.x. ",Python built-in types subclassing,<python><initialization><subclassing><built-in-types>,"Python built-in types subclassing What's wrong with this code?    When I create an instance of  with, for example, , and then I print this instance, all I get is an empty list . If  is subclassing , isn't  a  itself?  NB: both in Python 2.x and 3.x. "
16190465,"I could represent any list as a dictionary whose keys are the valid list indices, and whose values are the list's items. E.g.,  would be represented as .  In terms of asymptotic time and memory complexity, the  representation is identical to .  uses less memory by a constant factor.  If memory is not an issue, is it true that I can always use  instead of lists and other sequences (to gain the flexibility of using arbitrary keys, and to slightly standardize the code by reducing the number of different containers used)? ",Can `dict` replace `list` when memory is not a concern?,<python><python-3.x><containers><built-in-types>,"Can `dict` replace `list` when memory is not a concern? I could represent any list as a dictionary whose keys are the valid list indices, and whose values are the list's items. E.g.,  would be represented as .  In terms of asymptotic time and memory complexity, the  representation is identical to .  uses less memory by a constant factor.  If memory is not an issue, is it true that I can always use  instead of lists and other sequences (to gain the flexibility of using arbitrary keys, and to slightly standardize the code by reducing the number of different containers used)? "
16306844,"I am using Python's built-in sets to hold objects of a class I have defined. For this class, I defined , , and  so that I can compare objects by my custom comparison functions. That works just fine, until I find out that I actually need two sets of comparison functions, which will be used in different ways at different times in my code.  I can't define two sets of , etc. methods in my class, and Python's built-in set type does not accept a comparator argument. I suppose I could go write a wrapper class around set, but that seems like a lot more work than necessary.  Is there any easier solution to this than writing my own set class? ",Custom comparison functions for built-in types in Python,<python><built-in-types>,"Custom comparison functions for built-in types in Python I am using Python's built-in sets to hold objects of a class I have defined. For this class, I defined , , and  so that I can compare objects by my custom comparison functions. That works just fine, until I find out that I actually need two sets of comparison functions, which will be used in different ways at different times in my code.  I can't define two sets of , etc. methods in my class, and Python's built-in set type does not accept a comparator argument. I suppose I could go write a wrapper class around set, but that seems like a lot more work than necessary.  Is there any easier solution to this than writing my own set class? "
17408362,"I'm looking for a good set of sentinel values, e.g. experimentally:    And this seems to be documented:     CPython implementation detail: Objects of different types except   numbers are ordered by their type names; objects of the same types   that don’t support proper comparison are ordered by their address. reference   In the same fashion,     The ""largest"" builtin type seems to be , what can I use as a ""right"" sentinel value for comparison with unicode types? That is a value that's larger than any unicode string?  Is comparison order of instances of built-in types really well defined in Python? ",Comparison ordering of python built-in types,<python><comparison><built-in-types>,"Comparison ordering of python built-in types I'm looking for a good set of sentinel values, e.g. experimentally:    And this seems to be documented:     CPython implementation detail: Objects of different types except   numbers are ordered by their type names; objects of the same types   that don’t support proper comparison are ordered by their address. reference   In the same fashion,     The ""largest"" builtin type seems to be , what can I use as a ""right"" sentinel value for comparison with unicode types? That is a value that's larger than any unicode string?  Is comparison order of instances of built-in types really well defined in Python? "
17983598,"Here is an example.    When class takes arguments, it requires init, constructors to get.  But there is no init method above. How could it be possible?  Thanks in advance :) ",why not using constructor when making subclass of list class?,<python><constructor><built-in-types>,"why not using constructor when making subclass of list class? Here is an example.    When class takes arguments, it requires init, constructors to get.  But there is no init method above. How could it be possible?  Thanks in advance :) "
19345073,"This is such a common scenario when you just want to use a built-in type only with a different string representation.  For instance, consider a variable to store time measurements.  Typically you want a type that behaves exactly like int or float for all intents and purposes except that when coerced to string would produce a string formatted as HH:MM:SS or something like that.  It should be easy.  Unfortunately the following doesn't work    because the result of operations will be type float.  The solution I know is rewrite a couple dozen methods, but this is most impractical.  I can't believe there is no other way.  Why is there no subclass-friendly UserInt, UserFloat types in the standard library intended to be used in these situations? ",Subclass-friendly versions of built-in inmutable types?,<python><subclass><built-in-types>,"Subclass-friendly versions of built-in inmutable types? This is such a common scenario when you just want to use a built-in type only with a different string representation.  For instance, consider a variable to store time measurements.  Typically you want a type that behaves exactly like int or float for all intents and purposes except that when coerced to string would produce a string formatted as HH:MM:SS or something like that.  It should be easy.  Unfortunately the following doesn't work    because the result of operations will be type float.  The solution I know is rewrite a couple dozen methods, but this is most impractical.  I can't believe there is no other way.  Why is there no subclass-friendly UserInt, UserFloat types in the standard library intended to be used in these situations? "
25211477,"In the interactive interpreter, if you type the following in order you can see some pretty interesting stuff:  1)   2)   3)   When reading through the output for awhile I came across these lines in :    and then later on:    This last method appears to describe reverse or. Why does this method exist? What could possibly cause  to return anything different than ? ",What is the purpose of Python's built-in bool method __ror__?,<python><built-in><built-in-types>,"What is the purpose of Python's built-in bool method __ror__? In the interactive interpreter, if you type the following in order you can see some pretty interesting stuff:  1)   2)   3)   When reading through the output for awhile I came across these lines in :    and then later on:    This last method appears to describe reverse or. Why does this method exist? What could possibly cause  to return anything different than ? "
28286411,"I am trying to write the program that will be given a 2d list with coordinates of points on a grid (ex.), and will return all points passed during ""walking"". We can go diagonal.    We are using the example list as an input.   The problem is that the output is wrong and I do not know why:    And the output should be:    I think it is a problem of range function ",Range() function not working,<python><python-3.x><built-in-types>,"Range() function not working I am trying to write the program that will be given a 2d list with coordinates of points on a grid (ex.), and will return all points passed during ""walking"". We can go diagonal.    We are using the example list as an input.   The problem is that the output is wrong and I do not know why:    And the output should be:    I think it is a problem of range function "
29054999,"I am receiving the count of each line in each list,  I am looking to sum each particular values of entire list, (Nested lists included)    is my desired result.  example: code    I have used this  because i dont know how to compile and debug any other for than the print statement and recheck work, so please no flaming.(newbie alert)  example: result    I prefer a hint, or hints to what methods i should be applying or an example. I am in no way expecting a solution. I  ",Using 'for loop' to sum nested list values and return (total of sum),<python><list><for-loop><control-flow><built-in-types>,"Using 'for loop' to sum nested list values and return (total of sum) I am receiving the count of each line in each list,  I am looking to sum each particular values of entire list, (Nested lists included)    is my desired result.  example: code    I have used this  because i dont know how to compile and debug any other for than the print statement and recheck work, so please no flaming.(newbie alert)  example: result    I prefer a hint, or hints to what methods i should be applying or an example. I am in no way expecting a solution. I  "
30525262,"In other words, why does Python allow variable names which are identical to built-in type names such as int, float, list, etc? (C++ built-in type names are all reserved, in comparison). Consider the example    The output is ""Is int"". However, if I uncomment the first line, the output will be ""Not int"". Obviously my ""int"" has overridden the built-in type int. That is, in my opinion, potentially dangerous. ",Why are Python built-in type names not reserved keywords?,<python><reserved-words><built-in-types>,"Why are Python built-in type names not reserved keywords? In other words, why does Python allow variable names which are identical to built-in type names such as int, float, list, etc? (C++ built-in type names are all reserved, in comparison). Consider the example    The output is ""Is int"". However, if I uncomment the first line, the output will be ""Not int"". Obviously my ""int"" has overridden the built-in type int. That is, in my opinion, potentially dangerous. "
33997962,"In this particular part of the program, I couldn't really get why the  function wasn't the first one to be used:    I mean, wouldn't it be faster than stripping every single line at the beginning? Why or why not?  ",Which built-in function should come first in this particular case?,<python><built-in-types>,"Which built-in function should come first in this particular case? In this particular part of the program, I couldn't really get why the  function wasn't the first one to be used:    I mean, wouldn't it be faster than stripping every single line at the beginning? Why or why not?  "
38766579,"This question is not about usage of  function, but rather how it is done internally.  Because source code is in C I don't understand what is going on there.  Maybe someone can explain how Python convert string  to integer . What operations are performed for it? ",How Python converts string to integer,<python><built-in><built-in-types>,"How Python converts string to integer This question is not about usage of  function, but rather how it is done internally.  Because source code is in C I don't understand what is going on there.  Maybe someone can explain how Python convert string  to integer . What operations are performed for it? "
41144760,"I have to implement a class called  which is representing a complex number and I'm not allowed to use the built in types for that. I already have overwritten the operators (, , , ,  which allows to perform basic operations. But now I'm stuck with overwriting the  operator.  Allowed to use:  I'm using  to represent the imaginary part of the number and  to represent the rel part.  What I have already tried:   I looked up how to perform a division of complex numbers (handwritten) I have done an example calculation Thought about how to implement it programatically without any good result   Explanation of how to divide complex numbers:  http://www.mathwarehouse.com/algebra/complex-number/divide/how-to-divide-complex-numbers.php  My implementation of multiply:   ",Python Division Of Complex Numbers Without Using Built In Types and Operators,<python><division><complex-numbers><built-in-types>,"Python Division Of Complex Numbers Without Using Built In Types and Operators I have to implement a class called  which is representing a complex number and I'm not allowed to use the built in types for that. I already have overwritten the operators (, , , ,  which allows to perform basic operations. But now I'm stuck with overwriting the  operator.  Allowed to use:  I'm using  to represent the imaginary part of the number and  to represent the rel part.  What I have already tried:   I looked up how to perform a division of complex numbers (handwritten) I have done an example calculation Thought about how to implement it programatically without any good result   Explanation of how to divide complex numbers:  http://www.mathwarehouse.com/algebra/complex-number/divide/how-to-divide-complex-numbers.php  My implementation of multiply:   "
44493690,"Can I assume that that type objects of python's built ins are always the same? Example:    If so, can I use ""is"" instead of ""=="" when comparing type objects? The question is referring to all builtin types.  Thanks in advance! ",Are type on python's builtin unique,<python><built-in-types>,"Are type on python's builtin unique Can I assume that that type objects of python's built ins are always the same? Example:    If so, can I use ""is"" instead of ""=="" when comparing type objects? The question is referring to all builtin types.  Thanks in advance! "
49465215,"im trying to make an app that runs few files to make it organized, however im kinda lurker in python and got stuck trying to import values from  in .  The error type im getting looks like this depending on how im trying to get the object's value:    or    The whole idea is to make get self. values in the other file not using the return but simply specifying the element.  Simple sample code:  Main file:    Settings file:    so basicaly that is the minimum extension of what im trying to do, i could return the self.code in run however that is not what i want because i have many settings_values and id like to access them in different files.  help much appreciated.     Edit:   So how should i approach this if i need to  in  but only run() settings whenever i start running the main_run() and than just get the variables?    I dont want to complicate it with saving to file and than reading a list() i need to just access them and only run      basicaly: my settings gets a long list from pickle and than makes some operations that return the code combination and lots of other self.settings that need to be initiated when the program(main) starts and than for the whole While True inside run() the values are fixed unless i start refresh_settings() and change the settings than the data is recompiled and the program returns to while true  ",Python getting values from class,<python><class><object><built-in-types>,"Python getting values from class im trying to make an app that runs few files to make it organized, however im kinda lurker in python and got stuck trying to import values from  in .  The error type im getting looks like this depending on how im trying to get the object's value:    or    The whole idea is to make get self. values in the other file not using the return but simply specifying the element.  Simple sample code:  Main file:    Settings file:    so basicaly that is the minimum extension of what im trying to do, i could return the self.code in run however that is not what i want because i have many settings_values and id like to access them in different files.  help much appreciated.     Edit:   So how should i approach this if i need to  in  but only run() settings whenever i start running the main_run() and than just get the variables?    I dont want to complicate it with saving to file and than reading a list() i need to just access them and only run      basicaly: my settings gets a long list from pickle and than makes some operations that return the code combination and lots of other self.settings that need to be initiated when the program(main) starts and than for the whole While True inside run() the values are fixed unless i start refresh_settings() and change the settings than the data is recompiled and the program returns to while true  "
50118488,"I noted that    yields an error.  I can see, why that is forbidden. But how? Can I use that in ""normal"" code? ",How are built-in types protected from overwriting (assigning to) their methods?,<python><built-in-types>,"How are built-in types protected from overwriting (assigning to) their methods? I noted that    yields an error.  I can see, why that is forbidden. But how? Can I use that in ""normal"" code? "
50203630,"I teach coding using Python, and in some assignments, it's desirable for students to implement functionality which is otherwise provided by built-in functions or methods of built-in classes. An example assignment is where I want students to write two functions - one called  that adds an element to the list so that the list remains sorted, and another called  which returns a new list and uses  for sorting.  My access to the students' code is through unit test cases, in which I can call these functions. The problem is that in the  function, students can use  method and in the  function, they can use  built-in function.  It's easy to override the built-in functions (which in this case can raise an exception with the message that their use is not allowed). I can also override objects and functions in built-in modules (e.g., I needed to prevent the use of  function). But I cannot replace the method of a built-in type, like in the code below:    I get the error:    Is there a way to ban the use of specific methods in built-in classes? ",Limit use of methods in built-in classes for programming assignments,<python><overriding><built-in-types>,"Limit use of methods in built-in classes for programming assignments I teach coding using Python, and in some assignments, it's desirable for students to implement functionality which is otherwise provided by built-in functions or methods of built-in classes. An example assignment is where I want students to write two functions - one called  that adds an element to the list so that the list remains sorted, and another called  which returns a new list and uses  for sorting.  My access to the students' code is through unit test cases, in which I can call these functions. The problem is that in the  function, students can use  method and in the  function, they can use  built-in function.  It's easy to override the built-in functions (which in this case can raise an exception with the message that their use is not allowed). I can also override objects and functions in built-in modules (e.g., I needed to prevent the use of  function). But I cannot replace the method of a built-in type, like in the code below:    I get the error:    Is there a way to ban the use of specific methods in built-in classes? "
54453192,"I need to add an attribute (holding a tuple or object) to python objects dynamically. This works for Python classes written by me, but not for built in classes.   Consider the following program:     This correctly prints . However the following program doesnt work.    Both of the above line throws the following error   Now, the reason found from these questions (i.e., Attribute assignment to built-in object, Can&#39;t set attributes of object class, python: dynamically adding attributes to a built-in class) is Python does not allow dynamically adding attributes to built_in objects.   Excerpt from the answer: https://stackoverflow.com/a/22103924/8413477      This is prohibited intentionally to prevent accidental fatal changes to built-in types (fatal to parts of the code that you never though of). Also, it is done to prevent the changes to affect different interpreters residing in the address space, since built-in types (unlike user-defined classes) are shared between all such interpreters.   However, all the answers are quite old, and I am badly in need of doing this for my research project.   There is a module that allows to add methods to built in Class though:  https://pypi.org/project/forbiddenfruit/  However,it doesnt allow adding objects/attributes to each object.   Any help ? ",Is it possible to add attributes to built in python objects dynamically in Python?,<python><python-3.x><python-2.7><built-in><built-in-types>,"Is it possible to add attributes to built in python objects dynamically in Python? I need to add an attribute (holding a tuple or object) to python objects dynamically. This works for Python classes written by me, but not for built in classes.   Consider the following program:     This correctly prints . However the following program doesnt work.    Both of the above line throws the following error   Now, the reason found from these questions (i.e., Attribute assignment to built-in object, Can&#39;t set attributes of object class, python: dynamically adding attributes to a built-in class) is Python does not allow dynamically adding attributes to built_in objects.   Excerpt from the answer: https://stackoverflow.com/a/22103924/8413477      This is prohibited intentionally to prevent accidental fatal changes to built-in types (fatal to parts of the code that you never though of). Also, it is done to prevent the changes to affect different interpreters residing in the address space, since built-in types (unlike user-defined classes) are shared between all such interpreters.   However, all the answers are quite old, and I am badly in need of doing this for my research project.   There is a module that allows to add methods to built in Class though:  https://pypi.org/project/forbiddenfruit/  However,it doesnt allow adding objects/attributes to each object.   Any help ? "
54615019,"I have a input text file there has some c language code. I want to detect from that file how much c data types are included there and it will be saved another output file but first want to show my input text then under this text my another filtering code will show into output file.  In this case first i have opened a file with 'a' or append mode but it's working opposite.  My Code    my expect output text file will show such like following       into my input file has some c code after filtering it'll show 1 int, 3   float and 1 return data types.   Thanks ",c builtin data types detect into input text file with python,<python><file><built-in-types>,"c builtin data types detect into input text file with python I have a input text file there has some c language code. I want to detect from that file how much c data types are included there and it will be saved another output file but first want to show my input text then under this text my another filtering code will show into output file.  In this case first i have opened a file with 'a' or append mode but it's working opposite.  My Code    my expect output text file will show such like following       into my input file has some c code after filtering it'll show 1 int, 3   float and 1 return data types.   Thanks "
55459493,"In Python, it is possible to dynamically access a class object by name with :    How can I do that for built-in type objects (, , , etc.)?  I would like to use the same trick, but I don't know in which module built-in types are defined. ",Dynamically acessing a built-in type object by name,<python><module><dynamically-generated><built-in-types>,"Dynamically acessing a built-in type object by name In Python, it is possible to dynamically access a class object by name with :    How can I do that for built-in type objects (, , , etc.)?  I would like to use the same trick, but I don't know in which module built-in types are defined. "
58603138,"I want to implicitly extend the int, float, str, list, dict, set, and module classes with custom built substitutions (extensions).  When I say 'implicitly', what I mean is that when I declare 'a = 1', and object of the type Custom_Int (as an example) is produced, as opposed to a normal integer object.  Now, I understand and respect the reasons not to do this. Firstly- messing with built-ins is like messing with the laws of physics. No good can come from it. That said- I do understand the gravity of what I'm trying to do and what can happen if I do it wrong.  Second- I understand that modifying a base case will effect not just the current run-time but all running python processes. I feel that by overriding the __new__ method of these base classes, such that it returns Custom_Object_Whatever if and ONLY IF certain environmental factors are true, other run times will remain largely unaffected.  So, getting back to the issue at hand- how can I override the __new__ method of these various types?  Pythons forbiddenfruit package seems to be promising. I havn't had a chance to reeeeeeally investigate it though, and if someone who understands it could summarize what it does, that would save me a lot of time.  Beyond that, I've observed something strange.   Every answer to monkeypatching that doesn't eventually circle back to forbiddenfruit or how forbiddenfruit works has to do with modifying what I will refer to as the 'absolute_dictionary' of the class. Because everything in Python is essentially a mapping (or dictionary) of functions/values to names, if you change the name __new__ within the right mapping, you change the nature of the object.  Problem is- every near-success I've had has it that if I call 'str( 'a' ).__new__( *args )' it works fine {in some cases}, but the calling of varOne = 'a' does not seem to actually call str.__new__().  My guess- this has something to do with either python's parsing of a program prior to launch, or else the caching of the various classes during/post launch. Or maybe I'm totally off the mark. Either python pre-reads and applies some regex to it's modules prior to launch or else the machine code, when it attempts to implicitly create an object, it reaches for something other than the class located in moduleObject.builtins[ __classname__ ]  Any ideas? ","(Python) Monkeypatch __new__ for objects of type int, float, str, list, dict, set, and module in python",<python><monkeypatching><built-in-types>,"(Python) Monkeypatch __new__ for objects of type int, float, str, list, dict, set, and module in python I want to implicitly extend the int, float, str, list, dict, set, and module classes with custom built substitutions (extensions).  When I say 'implicitly', what I mean is that when I declare 'a = 1', and object of the type Custom_Int (as an example) is produced, as opposed to a normal integer object.  Now, I understand and respect the reasons not to do this. Firstly- messing with built-ins is like messing with the laws of physics. No good can come from it. That said- I do understand the gravity of what I'm trying to do and what can happen if I do it wrong.  Second- I understand that modifying a base case will effect not just the current run-time but all running python processes. I feel that by overriding the __new__ method of these base classes, such that it returns Custom_Object_Whatever if and ONLY IF certain environmental factors are true, other run times will remain largely unaffected.  So, getting back to the issue at hand- how can I override the __new__ method of these various types?  Pythons forbiddenfruit package seems to be promising. I havn't had a chance to reeeeeeally investigate it though, and if someone who understands it could summarize what it does, that would save me a lot of time.  Beyond that, I've observed something strange.   Every answer to monkeypatching that doesn't eventually circle back to forbiddenfruit or how forbiddenfruit works has to do with modifying what I will refer to as the 'absolute_dictionary' of the class. Because everything in Python is essentially a mapping (or dictionary) of functions/values to names, if you change the name __new__ within the right mapping, you change the nature of the object.  Problem is- every near-success I've had has it that if I call 'str( 'a' ).__new__( *args )' it works fine {in some cases}, but the calling of varOne = 'a' does not seem to actually call str.__new__().  My guess- this has something to do with either python's parsing of a program prior to launch, or else the caching of the various classes during/post launch. Or maybe I'm totally off the mark. Either python pre-reads and applies some regex to it's modules prior to launch or else the machine code, when it attempts to implicitly create an object, it reaches for something other than the class located in moduleObject.builtins[ __classname__ ]  Any ideas? "
59223768,I created a model object. This object has several boolean fields.    Some of them are right and others are wrong.  I want to show only the fields that have the correct value in the template.  How can I do this in a shorter way instead of checking each field individually?   ,How to display Django BooleanFields selected true in template?,<python><django><templates><built-in-types>,How to display Django BooleanFields selected true in template? I created a model object. This object has several boolean fields.    Some of them are right and others are wrong.  I want to show only the fields that have the correct value in the template.  How can I do this in a shorter way instead of checking each field individually?   
60715657,I am really confused about the replace python method. i used the replace function in two instances but the output is really confusing. This is the code below    and when i run the code below. the output becomes. there was once a young woma someone please tell me why was deleted from the woman. ,Python Biult-in Methods,<python><built-in-types>,Python Biult-in Methods I am really confused about the replace python method. i used the replace function in two instances but the output is really confusing. This is the code below    and when i run the code below. the output becomes. there was once a young woma someone please tell me why was deleted from the woman. 
