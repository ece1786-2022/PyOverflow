Id,Body,Title,Tags
166198,"I'm writing a little debug app for a bit of kit we're developing and I'd like to roll it out to a few users to see if they can provoke any crashes. Does anyone know a way of effectively wrapping a wxPython app to catch any and all unhandled exceptions that would cause the app to crash?  Ideally I'd want to capture all output (not just errors) and log it to a file. Any unhandled exceptions ought to log to the current file and then allow the exception to pass on as per usual (i.e. the logging process ought to be transparent).  I'm sure someone must have done something along these lines before, but I've not managed to turn up anything that looks useful via google. ",How can I capture all exceptions from a wxPython application?,<python><exception><error-handling><wxwidgets><error-reporting>
1291438,"From this question, I'm now doing error handling one level down. That is, I call a function which calls another larger function, and I want where it failed in that larger function, not in the smaller function. Specific example. Code is:    Output is:    but line 8 is ""print workerFunc()"" - I know that line failed, but I want the line before:   ","When I catch an exception, how do I get the type, file, and line number of the previous frame?",<python><exception><exception-handling><error-handling>
1350671,"My background is in C# and I've just recently started programming in Python. When an exception is thrown I typically want to wrap it in another exception that adds more information, while still showing the full stack trace. It's quite easy in C#, but how do I do it in Python?  Eg. in C# I would do something like this:    In Python I can do something similar:    ...but this loses the traceback of the inner exception!  Edit: I'd like to see both exception messages and both stack traces and correlate the two. That is, I want to see in the output that exception X occurred here and then exception Y there - same as I would in C#. Is this possible in Python 2.6? Looks like the best I can do so far (based on Glenn Maynard's answer) is:    This includes both the messages and both the tracebacks, but it doesn't show which exception occurred where in the traceback. ","""Inner exception"" (with traceback) in Python?",<python><exception><error-handling>
1483429,How do I print the error/exception in the  block?  ,How do I print an exception in Python?,<python><exception><error-handling>
1508467,How can I log my Python exceptions?  ,Log exception with traceback in Python,<python><exception><logging><error-handling>
2739582,"When is exception handling more preferable than condition checking? There are many situations where I can choose using one or the other.  For example, this is a summing function which uses a custom exception:    And this is the same function, which avoids using exceptions    I think that using conditions is always more readable and manageable. Or am I wrong? What are the proper cases for defining APIs which raise exceptions and why? ",Condition checking vs. Exception handling,<python><exception><error-handling><conditional-statements>
3891804,"I am trying to raise a Warning in Python without making the program crash / stop / interrupt.  I use the following simple function to check if the user passed a non-zero number to it. If so, the program should warn them, but continue as per normal. It should work like the code below, but should use class ,  or  instead of printing the warning out manually.    If I use the code below and pass 0 to the function, the program crashes and the value is never returned. Instead, I want the program to continue normally and just inform the user that he passed 0 to the function.    I want to be able to test that a warning has been thrown testing it by unittest. If I simply print the message out, I am not able to test it with assertRaises in unittest. ",Raise warning in Python without interrupting program,<python><exception><error-handling><warnings>
4096087,"There is a list standard python exceptions that we should watch out, but I don't think these are the ones we should raise ourselves, cause they are rarely applicable.  I'm curious if there exists a list within standard python library, with exceptions similar to .NET's ApplicationException, ArgumentNullException, ArgumentOutOfRangeException, InvalidOperationException â€” exceptions that we can raise ourselves?  Or is there different, more pythonic way to handle common error cases, than raising standard exceptions?   EDIT: I'm not asking on how to handle exceptions but what types I can and should raise where needed. ",Where's the standard python exception list for programmes to raise?,<python><exception><error-handling>
4572362,"I'm trying to call a function.  One of the parameters is a variable with attributes (which I know because of the AttributeError exception I got).  I don't know the exact attributes this variable is supposed to have, so I was wondering if there was some way I can see some extra details about the exception, for example, which attribute it couldn't find.  Thanks. ",Is there someway I can get specific details about an AttributeError exception in Python?,<python><exception><attributes><error-handling>
4676957,"When do you use each? I find that I'm using if's a lot more than exceptions. It seems like I'm catching the exceptions using my ""ifs"", before I even get them.  There are ifs all over my code. ","When should you check for errors using ""if"" , and when should you use exceptions?",<python><exception><error-handling><conditional>
6828160,I've implemented a little validation library which is used like this:     performs the checks and populates a list called .  I know from other validation libraries that they throw exception when validation is performed unsuccessfully. Error messages would be passed as an exception property.  What approach is better? Is it advantageous to throw validation exceptions? ,Should a validate method throw an exception?,<python><validation><exception><error-handling>
7375492,"I'm aware that the sys.exc_info documentation says to take care when dealing with traceback objects, but am still uncertain of how safe or unsafe some cases are.  Additionally, the documentation says ""Warning: Don't do this!"", followed immediately by ""Note: Actually, its ok"", which further confuses me.  In any case, the docs and ""Why is there a need to explicitly delete the sys.exc_info() traceback in Python?"" (Alex Martelli's answer), seem to imply its only local variables that reference the traceback value assigned to them that cause a problem.  This leaves me with a few questions:   What, exactly, does ""local variable"" mean in this context?  I'm struggling for terminology, but: does this mean only variables created in the function, or also variable created by the function parameters?  What about other variables in scope, e.g, globals or self? How do closures affect the potential circular references of the traceback?  The general thought being: a closure can reference everything its enclosing function can, so a traceback with a reference to a closure can end up referencing quite a bit.  I'm struggling to come up with a more concrete example, but some combination of: an inner function, code that returns sys.exc_info(), with expensive-short-lived-objects in scope somewhere.   Feel free to tell me where my conclusions or assumptions are wrong, as I've reasoned myself into belief and non-belief of my own statements several times as I've written this :).  While I'd like answers to my specific examples, I'm also asking for general advice, knowledge, or war stories on how to safely deal with tracebacks in more esoteric situations (e.g, you have to run a loop and want to accumulate any raised exceptions, you have to spawn a new thread and need to report any of its raised exceptions, you have to create closures and callbacks and have to communicate back raised exceptions, etc).  Example 1: an inner function that does error handling    Does the  closure cause any raised exception to reference  and result in a circular reference because  also contains the traceback?  Is removing the traceback from  (i.e., calling ) enough to eliminate the circular-reference?  Example 2: a long lived object in scope of exc_info, or returning exc_info    Does the raised exception of  have a reference to , and, because  is cached, the traceback never goes away?  If so, how does one break such a cycle?  Alternatively,  contains the  stack frame, and the  stack frame contains the reference to , resulting in a circular reference.  If so, how does one break such a cycle? ",Proper care and safety when dealing with traceback objects from sys.exc_info(),<python><exception><error-handling><circular-reference>
8491194,I want to return an error code when the following error gets raised:    But I'm currently having trouble catching the error raised.    Resulting on this:    Any ideas? ,how to handle socket errors as exceptions in python + paramiko?,<python><exception><error-handling><paramiko>
10103296,"I am writing some code which can generate Exceptions deep in the stack, and I have a layer nearer the top which catches these exceptions and sends them off for processing by an error handling module.  What I would like is for the error handling module to be able to print the stack trace into its error log, but I'm finding it difficult to work out what the way to do this is.  Some notes on the background:   The code is multi-threaded, so I'm not certain of the behaviour of sys.last_traceback I have tried capturing the stack in the constructor of the exception itself.  sys.last_traceback is sometimes None in this case (since it only exists in the case of unhandled exceptions), and not always correct.  I am currently toying with using  self.stack = traceback.format_stack()[:-2]   in the constructor of the exception, and while this looks promising in terms of information, it doesn't feel like the ""right"" way to do it   All examples of how to do this that I've been able to find show how to print the stack trace in the except block, not in some later error handling module, and this appears to be different in behaviour from what I want.  (see, for example, Print current call stack from a method in Python code) I've mined the traceback module in the python docs (http://docs.python.org/library/traceback.html), and haven't been able to figure out whether this even does what I want.  It seems mostly concerned with formatting tracebacks as you might retrieve from sys.last_traceback.  It has some examples of usage, and none of them line up with what I'm trying to do.   I don't believe that I'm the first person to ever want to do this, so I must be missing something.  Any pointers in the right direction much appreciated. ",Correct way to handle Exception Stack Traces in Python,<python><exception><error-handling><stack-trace><printstacktrace>
11173945,I've created new exception class and I like to give it representation of errors like in OSError class. Here is what I want:    What should I do? Can I do this if I inherit from base Exception class? Here is what I've tried (example from module for work with gnulib):    It works wrong and returns just error name for Python 2 and empty string for Python 3. How can I get such behaviour as I want? Thanks! ,Python: Exception in the separated module works wrong,<python><exception><exception-handling><error-handling><python-3.x>
11865685,"I am trying to figure out how to use the try and except to handle a socket timeout.  The way I added the socket module was to import everything, but how do I handle exceptions? In the documentation it says you can use socket.timeouterror, but that doesn't work for me.  Also, how would I write the try exception block if I did ? What is the difference in the imports? ",Handling a timeout error in Python sockets,<python><sockets><exception><error-handling>
12283377,"I want to move a file, but in the case it is not found I should just ignore it. In all other cases the exception should be propagated. I have the following piece of Python code:    errno == 2 is the one, that has 'No such file or directory' description. I wonder if this is stable across Python versions and platforms, and etc. ",Are Python error numbers associated with IOError stable?,<python><api><exception><error-handling><errno>
12488822,"Codes like this:    What I want to get is the errcode like  which means , thanks for any help :) ","When a socket error occur, how to get its errorcode from the exception?",<python><sockets><exception><error-handling><error-code>
12550379,"As far as I know, most of the errnos returned by python's exceptions are the same with the errnos in ""linux/errno.h"". But at sometimes, things are not like what I expect:  For example, when a socket connection throw a socket.timeout exception, the errno it returned should be 110, however, it's errno is always :    Secondly, when a address-related exception is throwed, the errno will be negative, but the errnos in linux/errno.h are between 1 and 133:    In this case, will print -5.  I'm so confused of all of these errnos. :( ","Are errnos contained by python's exceptions the same with the errnos in ""linux/errno.h""?",<python><linux><sockets><exception><error-handling>
14625405,I'm very new to python so I have very simple doubt. Here is my code:    How to write a manual exception/error handling for this? ,Exception in python,<python><exception><exception-handling><error-handling>
15056187,"I'm new to programming and trying to work out the error handling at the moment. But i keep running into the same problem. When I find an error i want to rerun the script again. The problem is, if you enter a good input after the first mistake, it still sees it as a bad input. please help me out.    Can someone help me out, or link a nice tutorial about errorhandling? It would me help out alot ","Python problems with error handling (try, except)",<python><exception><exception-handling><error-handling><try-catch>
15451472,Say I want to compare 2 variables with different data types: string and int. I have tested it both in Python 2.7.3 and Python 3.2.3 and neither throws exception. The result of comparison is . Can I configure or run Python with different options to throw exception in this case?   ,Can I make Python throw exception when equal comparing different data types?,<python><exception><types><error-handling>
15887038,"I have to open &amp; write to about 10 different files all within the same loop. e.g:    Now what I'd like to do is be able to get specific exception information such as what file was being opened/written to within the general exception. From my current understanding, I'd have to do something like this to achieve what I want:    ...Which is going to get extremely clunky and unattractive when I have to do this for about 10 different files. Is there any way to get (for example) the filename info out of a general exception like in my first example? Basically so the exception could report things like ""error when writing to file1"" without a try/except specifically for file1 operations.  edit: This is a massive over-simplification of the data being written to the file. str(a) and str(a)+""hi"" are not really good representations of the data actually being written; file1 may need a hardcoded integer, where file2 may need a string formatted with multiple variables. to generalize the opening/writing process into a loop isn't going to work very nicely. ",Getting exception details in Python,<python><exception><error-handling><python-3.3>
15909709,"So, I've created a custom exception that I want to call in 2 different ways (a if/else statement, and a try/except statement). Here is the custom exception:    Here is how I am wanting to implement the custom exception:    My issues, I believe, are two fold:  1: When the standard  that is thrown in the  block (due to ), I want to pass  some extra parameters like 'file', just like the  implementation; how would I do that?  2: When the custom exception is raised (from the if/else statement being false), the CustomExceptions class ends up being called twice, because I raise it in the if/else block then it gets raised again within the  section.  I don't know how to get around this.   So, in the above case, I want to call CustomException when the  is not true, and I want to call it when there is a standard exception thrown inside the code block... but currently,  evaluates to false then the  will be raised twice...  So I want the custom exception to be used unilaterally throughout my code for  conditions, and standard python exceptions...   I know this explanation was convoluted but I'm not sure how else to explain what I'm after... Any help would be much appreciated!  Thanks in advance! ",python calling custom exceptions from if-statement and try-except,<python><exception><if-statement><error-handling><custom-exceptions>
16123529,"How to handle all but one exception?    Something like this, except without destroying the original traceback:   ",Handling all but one exception,<python><exception><exception-handling><error-handling>
16777082,I don't receive mails from errors happened in commands.    the command:    Obviously this throws     I have   LOGGING setting is    and then i have Sentry too.   and  are regularly filled by the app.  How do i catch that exception? Why Django doesn't catch that? ,Django: how to log exceptions from management commands?,<python><django><exception><error-handling><command>
16943404,"I use python multiprocessing library for an algorithm in which I have many workers processing certain data and returning result to the parent process. I use multiprocessing.Queue for passing jobs to workers, and second to collect results.  It all works pretty well, until worker fails to process some chunk of data. In the simplified example below each worker has two phases:   initialization - can fail, in this case worker should be destroyed data processing - processing a chunk of data can fail, in this case worker should skip this chunk and continue with next data.   When either of this phases fails I get a deadlock after script completion. This code simulates my problem:    I have two question about this code:   When  fails, how to detect that worker is invalid and not to wait for it to finish? When  fails, how to notify parent process that less results should be expected in the results queue?    Thank you for help! ",Python multiprocessing and handling exceptions in workers,<python><exception><error-handling><parallel-processing><multiprocessing>
16986931,"I recently switched from urlib2 to requests and I'm not sure how to deal with exceptions. What is best practice? My current code looks like this, but is not doing any good:   ",Python: Handling requests exceptions the right way,<python><django><exception><error-handling><request>
18000985,"If I'm using the built-in python logging mechanism and I make a mistake, such as:    Then I get an unhelpful error message:    Given I have a very large number of logging statements, is there any way to get a more helpful error message - one showing the line number where the mistake was made? ","How do I get the line number for a logging TypeError of ""not all arguments converted during string formatting""?",<python><exception><logging><error-handling><error-logging>
18218697,I'm having some issues with a simple bit of code not working correctly and I'm totally baffled as to why...    I get the following error:    What is so wrong with my code and why is it doing that? ,Saving an error exceptions to file erroring out,<python><exception><python-2.7><exception-handling><error-handling>
19060821,"This is what I got:    How do we say if x is not convertible to an int, do this?  Also, I'm getting this error:  builtins.TypeError: exceptions must derive from BaseException  What does this mean?  Instructions below    : an exception class that is a subclass of .  : an exception class that is a subclass of .  , a function that takes one parameter , with the following behaviour:   If , then  raises  with the exception message . If , but  is still not convertible  to an int (by calling ), then  raises a , without any  requirement on the exception message If  converts to an odd ,  raises an  , without any requirement on the exception message. Otherwise,  does nothing (no return, no print, nothing at all).  ",Exception class code not working,<python><class><exception><error-handling><subclass>
19192345,"From http://docs.python.org/2/howto/sockets.html     if a socket send or recv returns after handling 0 bytes, the   connection has been broken.   On the other hand, if the remote end of the TCP connection closes (or is killed), and socket.send() is called subsequently, one can see the following socket.error exception     socket.error: [Errno 104] Connection reset by peer   Now my question is, what is the difference between ""connection has been broken"" and ""Connection reset by peer"". And exactly what is meant by ""connection has been broken"" == socket.send() returns zero. To me, not being able to send even a single character is as bad as a socket.error exception. Whatever event that causes socket.send to return zero, should have ideally raised a socket.error exception, so that the application does not have to deal with two different things (exception and return value zero). ",Python 2.7 TCP Sockets: socket.send() that returns zero versus socket.send() that raises socket.error exception?,<python><sockets><exception><python-2.7><error-handling>
19579926,"  So I was able to catch the value error for my Hangman program that I'm doing so far but then it occurred to me. It doesn't just catch the value error of an empty input but it also catches the value error if someone were to input a non-integer character like an alphabetical letter. I want it to do both, so how can I set up another exception that will print(""Please enter an integer!"")?  Dammit,I tried fixing the program by adding a few other lines that I came up with for the program and I added a ""break"" in but when I do that I can't an error stating that ""i"" is not defined. Now if I take it out and run the program, the loop continues even if the user enters an integer as their input. ",Error exception handling python program,<python><exception><error-handling><try-catch>
19736188,I need to manage python errors. For example when I type:    I give back:    but I need to save this error in a variable. I use try..except for this:    and see in output:    It's not enough for me. I need to error lines numbers like to IDLE (or other IDE) (I use python 3.3 and can't use python 2.7) ,manage errors in python,<python><exception><python-3.x><error-handling>
19935597,Me: I am running Python 2.3.3 without possibility to upgrade and i don't have much experience with Python. My method for learning is googling and reading tons of stackoverflow.  Background: I am creating a python script whose purpose is to take two directories as arguments and then perform comparisons/diff of all the files found within the two directories. The directories have sub-directories that also have to be included in the diff. Each directory is a List and sub-directories are nested Lists and so on...    Problem: Normally all should go fine as all files in oldfiles should exist in newfiles but in the above example one of the 'file_in_nest' is missing in 'newfiles/'. I wish to print an error message telling me which file that is missing but when i'm using the code structure below the current instance of my 'compare' function doesn't know any other directories but the closest one. I wonder if there is a built in error handling that can send information about files and directory up in the recursion ladder adding info to it as we go. If i would just print the filename of the missing file i would not know which one of them it might be as there are two 'file_in_nest' in 'oldfiles'    This is my first activity on stackoverflow other than reading som please tell me if i should improve on the question!  // Stefan ,Python: error handling in recursive functions,<python><exception><recursion><exception-handling><error-handling>
20030576,"There are many at times we write code inside try: and except: block in Django. But my confusion is what to write inside exception: block or how to know what is the exact error and raise it.  For ex: In this particular case I am invoking an utility function from my views.py, and I have written like this.    Inside the process_my_data() definition I am doing some kind of DB operations. If it fails, and comes to except block what should I write here. I am not sure what to write that is why written  ",How to know and raise exact exception in Django views,<python><django><exception><error-handling>
20582750,I am just being curious about the syntax of python exceptions as I can't seem to understand when you are suppossed to use the syntax below to catch an exception.      and     What is the difference? ,Python exception syntax difference?,<python><exception><syntax><error-handling>
21553327,I often see comments on other Stack Overflow questions about how the use of  is discouraged. Why is this bad? Sometimes I just don't care what the errors are and I want to just continue with the code.  Why is using an  block bad? What makes it bad? Is it the fact that I  on an error or that I  any error? ,"Why is ""except: pass"" a bad programming practice?",<python><exception><error-handling><try-catch>
24643648,"I'd like to create a new exception for my Python module: RangeError. I would return this error when a value is out of an expected range.  My question is: should I derive the new error from the Exception class (as is suggested by the Python documentation) or should I derive it from the ValueError class (which makes more sense to me)?  What are the benefits and downsides to one option or the other? Will I be crippling future development if I derive it from the ValueError class?  (Note that this would not be for index out-of-range, as that's already handled by IndexError.)  Thanks, ",Python: Should a new RangeError exception be derived from the Exception class or from the ValueError class?,<python><exception><exception-handling><error-handling>
25257932,I wrote a python script like this:    When url has nothing to respond the following output appears for me:    Why?  ,Python requests exceptions timeout,<python><exception><error-handling><timeout>
25405327,let's say I have the following 3 scripts:    Lets say I get a traceback like this:    I have several different exceptions that occur in script3.py. Is there a way to handle ANY of these exceptions in line xyz in script1.py without handling the exceptions in script2.py? I just want to handle the exceptions that stem from script3.py in one line in script1.py. ,Python exception handling and raising,<python><exception><error-handling><nested><raise>
26059424,"Snippet 1    Snippet 2    Snippet 3    Is there a way to write code snippet 3 elegantly?   if  fails or not,  and  should be executed. if  fails or not,  should be executed.   In Basic/Visual Basic/VBS, there's a statement called  which does this. ",On Error Resume Next in Python,<python><exception><error-handling>
26062054,"I am trying to understand if I can handle the following error in python.   So I have a program which repeatedly calls the following line:    After running my program for some seconds, I turned off my  connection, and got the following error:    Is there any way I can handle this error? ",URLError in Python,<python><exception><exception-handling><error-handling>
27662707,"Python's  construct allows one to catch more than one exception and do the same thing to each one (), to do the same thing whether an Exception is raised or not () and to do something only if an exception is not raised (). Is there a way to handle each Exception separately, but then do the same thing (e.g. ) if any of them occured? At the moment I am using this call separately for each :   ",Python: do something for every Exception raised,<python><exception><error-handling>
27978889,If a file already exists how do I get rid of the error 17 and make a warning message instead?    However it still shows the ERRNO 17 message. What can I do? ,"Python 2.6 File exists errno 17,",<python><python-2.7><exception><error-handling><path>
28144052,"I have recently installed predictionio for recommendations on vagrant box. I'm fairly new to it. When I try to run its python sample file import_eventserver, I run into the following error:    Importing data...    Any ideas on how to know whats wrong here? Any help is appreciated.  ",Python exception: error: [Errno 10054] An existing connection was forcibly closed by the remote host,<python><exception><error-handling><prediction>
28201043,"Context: I have Flask routes defined for different API endpoints and each endpoint calls a controller class with certain parameters (uid, project_id, etc.).     The controller (proj_cntr) is responsible for determining, say, if the given PID is valid, wether the given user is allowed to perform the action, and other business logic validation.   I noticed that I am c/pasting a lot of code like this in different controllers:    Putting these checks (validations) in decorators seems like the best thing to do. But I am not sure which error handling pattern is best practice should the validation not pass.   1) Should I create specific custom exceptions (InvalidProjException, PermissionsException, etc.) for each decorator to raise?   Concerns: The catch block of the caller method will look bloated. Also, is it good to make the assumption that the caller knows what exceptions the decorators of the callee raise?  2) The decorator passes an extra error argument to the method and the method decides what exception to raise. This way the caller method is aware what exception type to expect and handle.  Concerns: Approach seems a little over-engineered and messy.  Sorry for the verbose question. Any thoughts/ideas are greatly appreciated. ",Is it a good pattern to raise exceptions in a python decorator?,<python><exception><error-handling><flask>
29453733,"I'm writing a program that writes data to an Excel file using the  module.  The code that opens the workbook is:    This used to work. Then I changed some stuff around in the bottom of the program (waaaaay after that line) and now it doesn't work, saying this:    This has happened when I forget to close the file before running it again (as it is trying to write to a file that's open in Excel which won't work), but I don't even have Excel open and it does this.  How can I fix this? Do I need to restart or something?  Also, I tried to have a  loop to stop the program if the initialization doesn't work. Even with  only, without a specific exception, it still completes the program unless I kill it manually. The script basically opens the Excel file, spends a long time downloading data from the Internet, and then writing that to the Excel file. I want it to stop if the initialization doesn't work so I don't have to wait for the script to complete (it can take up to 15 minutes). I'm pretty sure that it has something to do with the fact that it says """", but I'm not familiar with all the error-fu in Python.  EDIT:  I added an  command right at the end and now it doesn't give me the first error, but a second (and much larger and scarier) one:    EDIT 2:  The part of the code that actually writes to the file is this:    If I replace all the fancy  stuff with a single    it doesn't give me the error, and seems to work fine.  This doesn't provide the functionality I need, as some columns need to be formulas whose numbers change based on the row. What in the above code is causing the  line to bug out? ",xlsxwriter module won't open/close Excel file correctly,<python><exception><error-handling><exception-handling><xlsxwriter>
30477150,"I am working on an othello game for class and am trying to raise an exception when the player makes a valid move but this exception is making my program crash and im not sure why.  I get the error:    Here is my exception class:    And here is where the exception is being raised:    EDIT: to answer some comments I am tying to us my exception to stop my program from crashing by saying pass and check cell looks on my board and returns 0 if no piece is their and 1 or 2 if that player has a piece their line 46 of the code is s.makeMove(move[0],move[-1]) where s is a game bored object and move is a list of 2 numbers from the player saying the x and y location they would like to move to ",python raising an error exception,<python><exception><error-handling><exception-handling>
30633209,Can anyone let me know why the exception class I created cannot run in the raiser function?    Thanks ,Why the exception class created cannot run in the raiser function,<python><class><exception><error-handling><raise>
30878079,"I have a very simple question as described in the title. I searched a bit online and find the answers are not easy to for me to catch. A minimum example is, I have a python script python_script.py:    Then I have a bash script bash_script.sh which calls above python script.     What I tried to do is: After the exception is raised in python script, I want to the bash script to stop immediately (i.e., when num>10 in this example). But now with these two scripts, all num loops from 1 to 100 are executed in bash script, but only after 10 the exception is printed on screen. I guess this should be quite easy so thank you in advance for the help. ",How to stop a bash script when the python script that is called within bash encounters an error?,<python><bash><shell><exception><error-handling>
31618848,"I'm trying to do a simple error reporting system within my Django classes, but I cannot get to save a new object (from another class) if I raise a ValidationError.  Here is an example of what I want to do:    The problem is that if I raise an exception, even if it is risen after I do the h.save(), h doesn't get saved.  This makes all the sense because Django is so intelligent that shouldn't let you commit to the database if there is an error, but I can't find anywhere in the documentation where I can override this to deal with this specific situation.  ... or maybe I'm simply conceptually wrong and I have to deal with this elsewhere (I'm trying to do a robust system where others can write code for it so it should be fail-safe). ",Django: save other object before raising exception,<python><django><exception><error-handling><exception-handling>
32601996,"I have a problem with identifying an exception.  Im writing a scraper that scrapes a lot of different websites, and some errors I want to handle and some I only want to ignore.  I except my exceptions like this:    most of the exceptions I can identify like this:    But I have one exception ""[Errno 10054] An existing connection was forcibly closed by the remote host""  that has the name ""error"" which is too vague and Im guessing other errors also have that name. Im guessing I can somehow get the errno number from my exception and thus identify it. But I don't know how. ",Identify a specific exception in python,<python><exception><error-handling><exception-handling><web-scraping>
33284609,"I'm developing a Jinja extension that performs a few potentially harmful operations, which on failure will raise an Exception that holds some information on what went wrong.  When this occurs, of course the Exception will prevent Jinja from completing its render process and return  rather than a render result. This problem is easily mitigated using a try/catch statement and returning an empty string or whatever is suitable.  However, that effectively throws away the Exception and the debugging info, which I would rather pass on to my error log. The system responsible for setting up the Jinja environment has it's own logging service, which I would prefer to keep decoupled from the extension. I am aware though, that Jinja has an  class which I have successfully used to intercept access of undefined variables in another project.  Is there any way I could raise a special type of exception ( did not work), or tell the Jinja environment to log a warning, when an error occurs in my extension, while still allowing it to continue its execution?  What I have in mind is something along the lines of this example:    So, to clarify, as I wrote in a comment below:     Fundamentally I guess my question boils down to ""how can I make Jinja produce a warning, as it does for e.g. missing variables"".  ",Graceful error handling and logging in Jinja extension,<python><exception><logging><error-handling><jinja2>
33716330,"E.g. If I am trying to open a file, can I not simply check if  instead of using  . I think the answer to why I should not rely on  is that there may be a number of other reasons why the file may not open.  Is that the logic behind why error handling using  should be used? Is there a general guideline on when to use Exceptions in Python.  ",When Should I Use a Try-Except statement in Python?,<python><exception><error-handling>
34712812,"I am currently writing a banking application, and below you can see my code:    Raising an error  If you see  function, if the  is not present, then I am raising an . Is this the best way I can raise an  in Python assuming banking application are super critical ? You can also assume that this is a production level code.    ",What will be a very elegant way to raise an error in Python,<python><exception><error-handling><raise><raiserror>
35851013,"I'm trying to check to see wether or not an input is an integer but I keep on getting a syntax error. The code is as follows, thanks!   ",Python - Syntax Error With 'Exception',<python><validation><exception><error-handling><exception-handling>
35851782,"Consider the following example:    The tuple is the correct way to handle multiple exception types. Using a list for the multiple exception types causes neither to be handled.  I am wondering why Python syntax requires a tuple for multiple exception types.  The docs say that it uses a tuple, so perhaps it is just ""never was implemented using a list instead of a tuple.""  It seems reasonable to me that a list could also be used in this situation, conceptually at least.  Is there any reason why Python uses a tuple instead of a list for this situation? ","Why does handling multiple exceptions require a tuple, but not a list?",<python><python-2.7><exception><error-handling>
36157995,"Evaluating,    will cause the error,    Is there a better way of safeguarding against this error other than a ,  catch?   ",A safe max() function for empty lists,<python><list><exception><error-handling><max>
36653914,"I'd like to get detailed info about each variable treatment error.  Example 1:    Example 2:    I known i can wrap each method in my program in individual try-expect block and  print such message in the except clause in each of them.  But it there any way to collect local variables data, automatically pass it to top single try-except block and print such messages there?  I saw something like in py.test library. It overrides builtin python assert's and prints detailed message in stack trace when assert falls https://pytest.org/latest/assert.html ",Python: how to print detailed error messages about errors?,<python><debugging><exception><error-handling>
36662174,"There's something weird happening with my code, I have a first function that goes like this :    So this function works perfectly when called in the main program, but when I try to call function1 in another function2, both try#2 and except#2 are executed ! Cause directory1 is created and error message 1 is printed, also my info variable equals None.  How can calling function1 in a second function mess try and except clauses ?  Thank you ! ",Try and except both executed when called by another function,<python><python-3.x><exception><error-handling>
36747362,"I am trying to query objects in  using the library . If the query is not valid, I get a  error, which I've been able to isolate with a  statement. In this example, Contactd is not a real table to query. I would really like to just isolate the error message itself, but e is a class instance so I'm not sure how to isolate.  My Code:    Output:    Desired Output:    Also included is the  error handling code:   ",Isolating the error message in error handling from Salesforce API,<python><python-2.7><exception><error-handling><salesforce>
37224773,"i need a little bit of help understanding a problem that i have with user defined exceptions in python 2.7.11.   I have two files main.py and myErrors.py .in main i post data and receive a response and and in myErrors i handle the errors.   What i'm trying to do is execute the version error in the try:except statement, but it doesn't get executed even thought it should be. what i'm doing is that i pass the response to myErrors and update that data to a dictionary in the errors file.-  my question was badly phrased. What I want to do is, is pass the response to the error handler, but i don't want to execute it, until we get to the Try:except clause in on_response method. So when we get the response and if it's not successful, then check the error code and raise the exception. Now what i'm doing is checking first for errors and then executing the check for success (error code)  Here is the main    Here is the myErrors    Any help is much appreciated. ",Python user defined exception handling,<python-2.7><exception><error-handling>
38463194,"I am trying to insert multiple rows with the  function. My complete code is given at the end.  The exception I get is     I wish I could a more detailed error report giving the offending values that caused the error. Is it possible to get a more detailed error report (in an exception) from  so that it gives back the offending values that caused the error? For example, in my code, the following values are offending:    The  should be unique.  Or do I have to insert the values one-by-one only and observe the exceptions?  My code: based on this tutorial, I have added the  constraint on the column carname.   ",sqlite3 python 2.7 how to enable more detailed error reporting (exceptions) from sqlite3?,<python-2.7><exception><error-handling><sqlite>
41381360,"Is there a way to propagate an exception in a try/except block from one except to the next?  I want to catch a specific error and then do a general error handling as well.  ""raise"" is letting the exception ""bubble up"" to an outside try/except, but not inside the try/except block that raised the error.  It should be ideally something like this:    The problem I have is that when the IndexError gets catched with the first except, my general error handling in the second except block is not applied.  The only workaround I have for now is to include the general error handling code in the first block as well. Even if i wrap it in it's own functionblock it still seems less than elegant... ",Python: Propagate an exception through a Try/Except Block with multiple Excepts,<python><exception><error-handling><exception-handling>
41996128,I have a statement like this.  I just want to know which of the two assert statement has thrown the exception.    Thanks for the answer. ,How to check which statement has thrown exception?,<python><exception><error-handling><exception-handling>
43605512,"I am trying to understand what is a difference between raising a ValueError and an Exception. I have tried both in the same code (even in the same branch) and the result was the same - I got an error message.  I have made a research on this question on SO, but found no discussion on this. Then I read the documentation of exceptions, and found the following definition of ValueError:      Raised when a built-in operation or function receives an argument that has the right type but an inappropriate value, and the situation is not described by a more precise exception such as .   So as I understand, an Exception is a more general term, and ValueError can be applied in some specific cases. But since the results of raising both things are the same, I want to understand, what is the practical meaning of differentiating between a ValueError and an Exception. Python version should be here not relevant. Thank you!  EDIT: Thanks to your answers I got it, what is the difference between both terms in try-exception construct. But how do they differ in case of just raising them, not excepting?    and     Answering to @PeterWood: in both cases I just got the error message ""blah"", but in one case it was ""Exception: blah"", and in the second: ""ValueError: blah"". And I see in this case no practical difference between them both. ",Python: difference between ValueError and Exception?,<python><exception><error-handling>
43617092,I'm trying to write a while loop to check for errors during an automated login. I want it to run through the login and if there is an error then refresh the page and start again. When I try to use the exception  I get an undefined error. Is there another way I should write this? Or a different exception I should use?     the exception clause with no exception fixed it.  ,Exception Handling,<python><exception><error-handling><while-loop>
44773345,"I have this line of code in my main.py:    But it throws out the exception:    Why is this?  This is the entire code:    And this is the entire error:    I have gone through tf.app.run() line by line using the code found in https://github.com/tensorflow/tensorflow/blob/9dc6c17797c065796603d9259b2aa57b3c07ff71/tensorflow/python/platform/app.py#L22, and this line in     gives out the error   ",tf.app.run() error,<python><exception><error-handling><tensorflow>
45449635,  I'm fairly new to python and I ran cross this fragment  while maintaining someone else's code  To me that looks like a horrible way to exit a loop.  Is it the accepted way to code in python and I'll get used to it or is it as bad as it looks? ,Is this the correct way to raise an Exception? (Python),<python><exception><error-handling><runtime-error>
45621722,"I have a Python script:  However, when I attempt to run my script, Python raises an :  I kept playing around with my program, and I was able to produce four errors in total:       What do these errors mean? What am I doing wrong? How can I fix my code?  Note: This is an attempt at a canonical question because I see many similar posts every month. This is not a duplicate of existing questions about unindents or unexpected indents because they only deal with one type of indentation error each, and I'm looking to cover them all in one place. It's also possible to have logically incorrect indentation that does not cause an error message. One common form of this is attaching  to a  or  loop rather than (as intended) the corresponding . See Else clause on Python while statement if you need to close questions where OP did that. ",I'm getting an IndentationError. How do I fix it?,<python><exception><error-handling><indentation><code-formatting>
46090079,"I am working with Twilio's API to return information about phone numbers. Some of the phone numbers are invalid and return an error such as     If an error like the one shown above is returned, I want to print 'There is an error.' However, for my if statement, is there a way to make Python print that for when there is a traceback error/error in general? I think there is probably a better way than setting making it like   ",How do I write if-else statements in Python that work with exceptions/errors?,<python><exception><error-handling>
46632494,"This is my code.    If I enter 'a', it comes up with this error:    If I enter a number above 2 like '3':    How can I make sure that if a user enters anything other than 1 or 2, it executes my else commands where it calls my mainError() method which contains my exception that the program would display to my user. ",Why is my 'else: mainError()' not executing when a user inputs anything other than 1 or 2? E.g. @ or a or any number above 3,<python><python-3.x><exception><error-handling>
46890646,"Lets assume I have a simple code:    If I run it, I get error message immediately     But, if I change  to    I'll get the same error message after click ctrl+c  Why does task assignment change the time of output of error? ",Asyncio: Weirdness of Task exception was never retrieved,<python><exception><error-handling><python-asyncio>
47041472,"When looking at Stackoverflow-Questions about when to raise Exceptions and when to simply return  in Python functions, the emerging picture is that you should use Exceptions for unexpected behaviour and return  otherwise.  However, for-loops over iterables are realized via the  Exception raised by the  method, although eventually reaching the ""end"" of an iterable usually isn't unexpected. Why is the for-loop over iterables implemented the way it is? ",Why is the end of an iteration realized with a StopIteration Exception,<python><exception><error-handling><iterator>
47103557,"I'm trying to detect foreign languages in a dataframe using 'langdetect' library for Python.  Here im trying to print every chinese word found in a specific column. However, at some point I get this error message:  I understand this happens when a number, a blank space or a string that is not a word (reference code, mail address...) is found. All I want is to catch an exception and handle the situation accordingly BUT i don't know how to do it. Here's my attempt:  Can someone please help me fix this poorly written snippet ? Obviously there's something wrong with it but I don't know what exactly ! ",Why can't I catch the exception in this code?,<python><exception><error-handling>
47637955,"What is the recommended way of separately handling exceptions of the same type based on differences in what caused the exception?  Let's say one desire to handle the following two instances of  differently:        At the same time, we don't want to handle other attribute errors.  Are there any generalizable answers that work for all exception types? Can I interrogate the exception object for details using some method or function on the exception object?    I assume that the obvious answer is to refactor. My question specifically regards the cases where that would be inefficient or simply not possible (if there are any such cases at all).  ",Exception handling: Differentiating between instances of the same error in Python,<python><python-3.x><exception><error-handling><exception-handling>
47954784,"I'm in the midst of building a Django app and am hoping to get some advice on the proper way to handle errors and bugs in my code.  Here's a common situation exemplary of the problems I have: a user purchases a product. To process the purchase, my views need to perform a number of actions:   First, the view should create a  object in the database. If that is successful, the view should create an  object and    assign it to the newly-created User. If that is successful, my code should create a  object and add it to the newly created Order.   This is all well and good when no errors occur - but I find that the occasional error is inevitable in my code, and I want my app to deal with errors gracefully, rather than crashing outright. For example, if, for any reason, an  object cannot be created, the view should show the user an error and remove the  object that was previously created. And, it should throw a graceful error message rather than crashing outright and serving the user a Http 500 error.  The only way I can think of to do this is an extremely complex series of nested try / except clauses, like below. But designing my code this way is extremely messy and time-consuming, and it doesn't feel like the right way to do things. I know there must be a better way to design for proper error handling in Django and Python, but I'm not quite sure what it is.  I would greatly appreciate any advice on how to better structure my code in this situation.  Example code:   ",Designing code for proper error handling in a Django / Python app?,<python><django><exception><error-handling><exception-handling>
48029399,"Python's errors only show what line errors occur on. Example of a runtime error where knowing where in the line caused the error would save time:  It would be useful if errors also showed what column or character causes the error. Like in the example, I wouldn't need to check all 3 list indexes if the error pointed to where the problem was on the line. Another of a runtime error where knowing where in the line caused the error would save time:  This line has a lot of indecies (). I'd like to know which index causes the problem! Is there a setting (maybe a command-line flag) to make Python errors display the column/character as well as the line number that raises an exception?  Syntax errors point do to the invalid syntax with a  symbol, but runtime errors don't point to which variable(s) cause(s) the errors. ",Can I make Python tell me on exactly which character causes an error?,<python><python-3.x><exception><error-handling><runtime-error>
48884531,"I can raise an exception  another exception in order to provide additional information, e.g.:    Is there any way to source from multiple exceptions? e.g.   ",Python. Raise exception from multiple exceptions,<python><python-3.x><exception><error-handling><raise>
49309446,"So I have a function like:    And I want this function to only be able to take either 2 or 3 arguments (that means *args can only be 1 or 2 arguments). How do I throw an error message if the number of arguments is wrong? If I use a try/exception, is there a specific exception type for this? ",Python - Wrong number of arguments exception?,<python><python-3.x><exception><error-handling><try-catch>
50129644,Hi I'm pretty new to Python and I've just started to learn about errors and exceptions.I have this function in a class that inserts a line at a given index called num.I know python will raise an error if no num is given but I want to raise my own error.How do I do that?This is what I tried. But the error raised is still the default error?   ,How to raise own error when one argument is missing?,<python><exception><error-handling>
50247650,"Running my script, I get the following error for some files:    I have imported comtypes, and I wish to do an exception when this error occurs, so I do the following:    But it seems that Python does not recognize the exception, as it produces the same COMError as before.  Any suggestions on how to solve this problem? Thanks. ",Handling COMError in Python?,<python-3.x><exception><error-handling><exception-handling><try-except>
51741992,"I am using multiple try/except blocks to assign values of a dataframe (say data) to 3 variables(say b,c,d) I want to handle IndexErrors if positional indexer is out-of-bounds. What I am currently doing is shown below:    I want to know if there is a better of doing this like a function try_except() or something so that I can use it as shown below:   ",Handling multiple Try/Except statements,<python><exception><error-handling><exception-handling>
51757305,"So I am building a Python script to download images from a list of urls. The script works to an extent. I don't want it to download images that have urls that don't exist. I take care of a few images with some usage of status code but still get bad images. I still get many images that I don't want. Like these:     Here is my code:    Thanks for your time. Any ideas are appreciated.  Sincerely, Nikolas ",Check If Image URL Leads To Real Image in Python,<python><exception><error-handling><httprequest><urlrequest>
52307055,"I have two functions. function ""main"" is calling to function ""submain"". ""submain"" function contains try-catch block and return some value.  If ""submain"" executes successfully then it returns some value which i will display to end user directly.   If i get an exception then i have to prepare one user friendly message and print that. But to do that i need to know whether returned value is exception or not.   How can i check that returned value in exception or valid result?   ",python: How to check that returned value is exception or not,<python><exception><error-handling><return><try-catch>
52354405,"I was trying to catch a specific exception:    But instead of going into the if loop, I am getting:    Why is this happening? How can I catch a specific exception? ",Catch specific errors in python,<python><django><python-3.x><exception><error-handling>
52674581,"When implementing a try/except block, VS Code does not recognize the specified exception or any exception for that matter. Ex:    throws an exception error and does not print ""You cannot divide by zero"" when executed through the terminal. VS Code doesn't seem to be recognizing any exceptions. I've tried using the same code in IDLE and Sublime and it prints the correct message. Does anyone have any suggestions for fixing this?   Other information: I'm using the python extension from Microsoft and have no other extensions in VS Code.   Thanks! ",why is try except block not working in visual studio code for python 3.7?,<python><exception><error-handling><exception-handling><visual-studio-code>
52696172,I have been trying to improve my guessing game in Python by limiting the guess input between 2 numbers(1 and 100) and asking if the guess input is a number or not. I have been trying to do this both at the same time. Is there anyway I can do this by minimum coding? ,Limiting an input between Two Numbers and checking if the input is a number or not at the same time,<python><exception><error-handling><limiting>
53235877,I am trying to search a webpage for a link text and I'm trying to make the program respond without an error if the item is not found and move onto something else.    This is the error I receive:   ,how to raise error and move on to different function when item not found in selenium,<python><selenium><exception><selenium-webdriver><error-handling>
53250543,"I have a tiny web-server written in Python 3 using http.server which calls the function  in method  like this:    Now in this  function I have several conditional statements and  and  blocks roughly like this:    The code above is simplified, but in principle I return an empty string if an exception happens and thus my web server returns nothing to client if an exception happens.  Is there a more manageable way to handle this? Specifically, I'm looking to:   Avoid catching each error via a separate  section, while still supporting an error message dependent on error type. Avoid writing multiple  /  statements, often nested, within my function.     Note: This is a copy of this now deleted question. The solution from that post is included below, but other answers are welcome. ",Handling multiple exceptions in functions,<python><python-3.x><exception><error-handling><exception-handling>
54593320,"I am quite a newbie understanding of how to catch exceptions in python. I have a question regarding those two types of ways of catching exceptions. I only found useful information about ValidationError regarding here    But I did not quite understand if it can be used besides django or what are the error messages that I can expect about it. I saw this code sample regarding the validation of types.     So for  and  for me, it is clear:  exception ValueError  Raised when an operation or function receives an argument that has the right type but an inappropriate value, and the situation is not described by a more precise exception such as IndexError.  exception TypeError  Raised when an operation or function is applied to an object of inappropriate type. The associated value is a string giving details about the type mismatch.  In conclusion, I am trying to understanding what would be the advantage of the second code with , but it could be tricky as I did not find good documentation about. If someone could share knowledge about ValidationError, I would highly appreciate,  I am raising this question because I am going to use related library and I have not seen the exceptions being treated like this.  https://pypi.org/project/related/  Thank you community! ","ValidationError or TypeError, ValueError - Exceptions",<python><django><exception><error-handling><django-validation>
56008537,"Unfortunately, some of the code base I have to work with and unable to change right now looks something like this:    Which means, any exceptions gets caught, silently.  How can I bypass this horror?  I am using the simplest test code, and I can't easily know when it fails.  I can't raise anything, and I can't use exit()  What is the standard thing to do in this case? ",How to announce failure when inside a catch-all statement?,<python><exception><error-handling>
56049481,"I am trying to create a custom error handler in Flask 1.0.2 and Flask-RESTful 0.3.7, using the guidelines on the ""Implementing API Exceptions"" page.  (Flask-RESTful has its own way of creating custom error messages, but since it doesn't seem to have a way to accept a customized error message at the time of the exception, I am trying to use the vanilla Flask method instead.)    Calling http://127.0.0.1:5000/testme only returns a generic ""500 Internal Server Error"" message, however, not a 501 error with my custom error text.  It appears that  is being raised properly, but Flask seems to ignore it.    The  decorator seems to be properly set for the custom  Exception.  Why is it not being handled by Flask?    Thanks to anyone who can help. ",Why is my Flask error handler not being called?,<python><exception><flask><error-handling><flask-restful>
56521799,"I am trying to design a package which has init.py and multiple sub modules and each module has multiple classes defined in it.  I used python's logging library to create logs.  I want to log any uncaught error to my log file, that may arise when program executes. I understand overriding sys.excepthook is used to achieve this. So I inserted the following code into all my sub modules at the top after logger definition for that module       But this seems to not solve the problem because RuntimeErrors are still being displayed to console and not logged into the file.   What am I doing wrong here ? ",Over riding sys.excepthook,<python><exception><error-handling>
56524802,"I'm quite happy with this delete view:    When an item is referenced somewhere else as a foreign key, it fails. I thought to catch this integrity error (firstly raised by psycopg2 and secondly by django.db itself) using a  block.  Indeed you can do in python console:    I naively thought to include such a block in the view like this:    But in this case the exception is not caught. I wrote this view as a CBV as well, it fails to catch the exception too.  I tried this code in an other project and it works.  Why this doesn't work in case of Integrity exception? and how could I debug it?  Here is the traceback of the exception I want to catch:   ",Why an exception can't be caught in Django view and how to debug,<python><django><exception><error-handling>
56580217,I am trying to catch the error that stops the execution of my python script. But I don't want to catch all the errors or exception because some of them are not affecting the success of my scripts they are just guidance or console Info. I only want to catch and stock in a variable the error that cause my python script to stop. Thanks by advance ,Catch the error which stops the execution of my Python script,<python><python-3.x><exception><error-handling>
56588339,"I have created a tkinter program for calculating gpa, the only part I have left is the error handling part and I just couldn't find a way to write the infinite error handling loop. I am trying to write the loop so when you give a different value to the number of classes other than (1,2,3,4,5,6,7,8) the program doesn't continue until you give number of classes the right value.   ",Setting up a error handling loop in tkinter,<python><exception><tkinter><error-handling><valueerror>
56800989,"I am trying to run a file (asana_get_user.py) in C:\Users\WilsonNg\Documents\Internship via python.   However, when I run it, I get an attribute error:  error message    However, there is another exception error happening after this code is finished for some reason:  exception error    So it opened another file (email.py) within the same folder and created an exception error.   Any idea on why it referenced my email.py file?   asana_get_user.py     email.py   ",Why is my code opening another file and handling error exceptions?,<python><exception><error-handling>
56904459,"I have a script which uses the package pygsheets to upload a dataframe to Google sheets. If the dataframe is empty, the following error appears:    So, I have been trying to use a try-except structure to pass when the dataframe is empty, but raising an exception if any other error happens. The code is the following:    However, when I try to execute the lines above, it throws me the following errors:    How could I solve it? ",How to use custom exceptions from packages in your excepts clauses?,<python><exception><error-handling><pygsheets>
57108162,"I am loading multiple csv files daily to a database table. Source files are in Source folder Once loading is completed, move to Archieve folder. Code is working fine. I am struggle to write exception error handling in this code. Please help. Thanks in advance.  My Code in simple format:    My Original Code:   ",How to handling error loading csv files in python pandas,<python-3.x><pandas><exception><error-handling>
57160064,"Which if the better practice, if we're not going to do anything with the exception :    OR    I'm just curious as to whether it's best practice to write  even if we're not accessing the  object afterward. ",Is defining an exception as a variable (except Exception as e) best practice even if you're not accessing e at any point?,<python-3.x><exception><error-handling>
57615537,"I have to define an attribute in a class and I would like to manage error in the most pythonic way.  Here is the code I have tried so far. I can't figure out why I can not ""reach"" the exception in the following code.    I expected to reach the Exception case in the second iteration of the for loop since it is a KeyError (""key2"" has no ""property""). But it just passes by it. In this example, if the script is run, it does not print ""I am not reaching here"". Could anyone explain why I am seeing this wrong? Thanks! ",Python3 missing exception when looping,<python-3.x><exception><error-handling>
58173048,"I am using openCV's cv2 for this, and i am not satisfied with the errors it produces. So I want to catch the error, and then raise a more appropriate error so the programmer gains better perspective of what went wrong:    However this just throws both exceptions:    I want to do something like:    Thats my way of illustrating something in a totally made-up pseudo programming language, but you get the point. How should I go about doing this? Thanks :)) ",Raising more appropriate error after try statement in Python?,<python><exception><error-handling><try-catch><raise>
59046676,"I have one third-party API-kit module (bitmex). I have many calls to this module in my code. The problem is that this API-kit often gives me an error:    I understand that this error is due to unstable BitMEX servers.  But if it occurs during a trading session, it completely destroys my trading.   Here is an example of calling the bitmex module in my code:    Of course, I tried to solve the problem.  Here is the function I came up with:    As you understand, the meaning of this function is that I pass it a request in a packed form (in a string object).  After that, there will be ""While True"" until the request is executed without this error.   Here is an example of how I am now making these calls:    This solution works, but I understand that it is far from elegant and rests on crutches.  I will be glad if you suggest a couple of ideas or completely alternative methods for solving this problem, where I don't need to use a string object.  Maybe for this, I need to create a class? ",Creating an elegant solution to avoid HTTPServiceUnavailable,<python-3.x><function><exception><error-handling><bitmex>
59435875,"How to retry a function if the exception is NOT of a certain type using Python's tenacity?   will retry if there is risen an exception of a certain type.  does not seems to work placed before the method nor before its arguments.  , on the other side, loops forever, even if there is not risen error, until there is risen error of a certain type. ",Python tenacity: How to retry if exception is NOT of a certain type?,<python><python-3.x><exception><error-handling><python-tenacity>
59856128,"Imagine the following code:    When calling it, an  is risen from the last line: .  I could even understand it if it was risen from , as  might be not available or something. But this is not the case.  Why, when my bare exception is supposed to handle everything?  Please ignore the discussion whether bare exceptions are a good or bad practice, this is another topic. The question is how come the exception is risen at all in this case.  Edit: the exception is risen very rarely, under heavy DB load. You will not be able to reproduce it.  Edit2: I managed to copy the traceback as text from the sentry report:    Indeed it claims the exception is risen from this line. ","Why is Python raising exception, despite a bare Except block?",<python><mysql><exception><error-handling>
59869542,Example error handling function:    I would call the function like so:    is there a more efficient/effective way to handle errors than using return multiple times? ,Effective method of error handling a function,<python-3.x><exception><error-handling>
59924513,I'm trying to run a collatz in Python and I'm having trouble taking into account input that isn't an integer. I would like to have a Try and Except to work within my code that considers the user's non-integer input. Please see my code below.   ,How do I use a Try and Exception to raise an error with a print message in Python?,<python><exception><input><error-handling><try-catch>
60159545,"I have a function within a module, that does something like this:  Then within my main program,  My output is:  Some other error happened, let's reraise it.... val= default foo In main else And we're done  No exception is raised. At the risk of missing something obvious, why isn't the  being reraised within my main?  It almost seems like the  within my  in  is causing the exception not to be reraised, but this seems odd to me and I can't find any documentation of it.  Here's what I think should be happpening, would like to understand where I'm off.  I call  within my main program  raises ValueError The ValueError is caught within the  , prints &quot;Some other error happened&quot; and reraises it. Back in main, I thought the reraised ValueError should get caught by the , should print 'In main except', reraise, and then the exception itself should be uncaught causing the program to halt.  But I get no exception raised and wind up in the  clause instead.  ",Why isn't my Python exception being re-raised?,<python><exception><error-handling><try-catch>
60508555,"So, I have this code, works very fine, but I want to have possibility if I input x it will return me to the beginning of choosing list I have   ",How to I make exception in exception when catching errors in python?,<python><function><if-statement><exception><error-handling>
60688321,"So I have following two different try-except blocks, where I do not understand the output and I believe it is because of Exceptions within except blocks. Even though I found a few questions with a similar title, they did not help me answering my question.  First block:    Since we caught the IndexError, why does the last exception 5?  (I do understand that the  is caught by the second except and we get the 3, and since finally is always executed, 4 is printed out aswell).  Second (related) Question:    How is it, that the  does not execute the  statement? And why do we get the 5 output this time, since we did not get it in the first example? ",Exception handling within exception,<python-3.x><exception><error-handling><try-catch>
60914445,I currently have the following code which throws an error on exception just how i want:    However in some cases if I get a specific exception such as:    I want to change the message of e in the exception to what i want.. how would i go about this?    but it doesnt seem to be working ,Why does my message for exception not change with my if statement,<python><python-3.x><exception><error-handling><try-catch>
61304761,Letâ€™s say I have this function :    Is this considered good practice to only return true if it is successful otherwise stop block execution with raise error ?   ,Is it good practice to return true when success otherwise raise exception in python?,<python><exception><error-handling>
61309359,"I'm trying to improve my coding and recently came across custom exceptions and the concept of ""Easier to ask for forgiveness than permission"" (EAFP) but it doesn't seem to me that custom exceptions still follow this concept.   For example, in the code below, A looks clean but no custom exception. B also looks clean but no custom exception and does not follow EAFP concept. An alternative to B is replace KeyError with a custom error. C has a custom exception but it seems pretty verbose and for me, it almost seems closer to LBYL.   Is example C typically how custom exceptions are used? (with try/except AND if/else)  Are the extra lines of code in example C worth it for production-grade code that many people will use?   ","custom exceptions in Python don't seem to follow the ""its easier to ask for forgiveness""?",<python><python-3.x><exception><error-handling>
61498705,"I am trying to use exception handling to prevent my system from crashing, I used the below codes where this csv file does not actually exist. But the system is is continuously giving me the answer. Can someone help me to correct my codes please....help me please  These are my source codes:    the results:   ",several lines appearing when using exception handling to prevent system from crashing,<python><python-3.x><exception><error-handling>
61811551,"I am trying to understand how to raise a custom error in main method with action. Below is my sudo code but don't work.   I want to raise a custom exception that will go to except in main method with tag, message value. but the below code output a class:  class 'main.pdv_error_response'   ",how to raise a custom exception in main method proper?,<python><exception><error-handling><raiserror>
62200818,"Im just starting my python learning journey and need some help with the correct way to raise an exception.   Consider a block of code which loops thru a list and performs a task. If an exception occurs,continue with the program execution. And execute the rest of the code. At the end of the program raise the exception and system the application with non zero code. The idea is the program should continue executing all the tasks, but exit with a non 0 code for an external application to track and report.    ",what is the correct way to handle a caught exception and raise it outside of try block,<python><exception><error-handling><event-handling>
62340629,For both developers and users ??? which one is better ? defining a new custom error like this :    or using :    which one is better ??  ,Which is better using custom exceptions or using ValueError,<python><python-3.x><exception><error-handling><customization>
62948384,"I have a ViewSet:  I have a render:  I have a custom error handler:  Problem: If View's  will be raised I get my custom XML formatted error message.  But if some exception will be happened inside render, there is appears Django's standard  message If I will try to access outside View , there is appears Django's standard  message again  I want to show my custom XML error anytime. How can I do it? ",How to override/customize ALL server errors in Django and Django rest framework,<python><django><exception><error-handling><django-rest-framework>
62951781,"Suppore below run_test() is my python main method, from that i'm calling function1() and it fails any way because of division by 0 and throws error to its exception block. But what i want is the exception from function1() should go to calling function exception block, here it is run_test() With below code i'm not able to achieve, how can i catch a exception from main function.  ",python3 raise exception to calling method,<python><python-3.x><exception><error-handling>
62952273,"I'm trying to write a nice error handler for my code, so that when it fails, the logs, traceback and other relevant info get emailed to me. I can't figure out how to take an exception object and extract the traceback. I find the  module pretty confusing, mostly because it doesn't deal with exceptions at all. It just fetches some global variables from somewhere, assuming that I want the most recent exception. But what if I don't? What if I want to ignore some exception in my error handler? (e.g. if I fail to send me email and want to retry.) What I want  Note that  takes  as an argument. There's lots of questions on Stack Overflow about using the  module to get a traceback string. The unique thing about this question is how to get it from the caught exception, instead of global variables. Result:  contains the string:  Note that it contains not just the most recent function call, but the whole stack, and includes the &quot;AssertionError&quot; at the end ",How to catch python exception and save traceback text as string,<python><exception><error-handling><traceback>
63336507,"Can anyone please help with error handling &amp; for loop in my GA reporting API python script? What I would like it to do is attempt requesting data from the API an n number of times (5 times), if there is an error while pulling the data (generally &quot;Service Unavailable&quot;), log it (log_progress function), but keep trying for n number of times; eventually, if the number of attempts reaches the maximum amount and the API is still returning an error, run a send_email function (which will notify me that some data was not downloaded) and move on with the code to the next item (there is a wider for loop in the script which loops through different GA views/days).  Unfortunately tesing this script is made more complicated by the randomness of GA errors which rarely seem to happen while I'm running the script manually. ",error handling in for-loop API response with python,<python><for-loop><exception><error-handling><google-analytics-api>
63494956,"recently I began to work with tkinter. I try to create a Grade manager and when I try to save the input from an Entry box, but every way I try, the result is an error or 'None'  For this piece of code the following error is :  Exception in Tkinter callback Traceback (most recent call last):   File &quot;C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.8_3.8.1520.0_x64__qbz5n2kfra8p0\lib\tkinter_init_.py&quot;, line 1883, in call return self.func(*args)   File &quot;C:/Users/User/PycharmProjects/pythonProject/main.py&quot;, line 28, in  Button(window, text=&quot;Show&quot;, command=lambda: self.check_value(window.Input_Name)).pack()   File &quot;C:/Users/User/PycharmProjects/pythonProject/main.py&quot;, line 20, in check_value Name = Input_Name.get() AttributeError: 'NoneType' object has no attribute 'get'  ",get() from an Entry Box returns 'None',<python><exception><tkinter><error-handling>
63979684,"I am using napalm library to connect to Arista vEOS using GNS3. I intentionally put the wrong IP just to see how my codes handle an error. But the try and except did not work as intended.  instead it gave me this TimeoutError eventho I already try to catch the TimeoutError.  Enlighten me, as how am i should handle the error. ",How to properly handle this error while using multi thread,<python><exception><error-handling><timeout><napalm>
64404157,"I am trying to use Twisted and Python together. I need to export exceptions and errors to a file rather than the console incase anything unexpected pops up during runtime and I happen to miss it, however redirecting stderr doesn't seem to work. The error still shows up in the console and it doesn't write to the file (although the file is created). Here is a minimal example:  What am I doing wrong? ",Twisted and writing exceptions to stderr,<python><exception><error-handling><twisted><stderr>
64548825,"I have a bunch of functions similar to this structure:  I was wondering what would be the difference with this other implementation:  What should I use in this case? I see it a little bit redundant and also I'm concerned of the time execution, because I have many more functions with this same architecture and I don't know if adding finally would increase the execution time too much or not. ",Should I use finally after try/except?,<python><exception><error-handling>
64715784,"Is there a simple way to hide an error in the IDE printout?  Is my relevant section of code. Due to  containing a 0 as its first point, Python isn't overly fond of the  operation. The IDE (Jupyter) throws an error message  C:\ProgramData\Anaconda3\lib\site-packages\ipykernel_launcher.py:119: RuntimeWarning: divide by zero encountered in log  But the rest of the code runs fine, the relevant pair of results (the ts = 0, and respective  value are removed later anyway when plotting best fit lines to stop problems with infinities. But I would still like to supress that specific error message, since I know what's causing it and it's otherwise fine. ",How do I suppress a warning in the IDE in Python? (IDE is Jupyter),<python><exception><error-handling><runtime-error><suppress-warnings>
65073730,"I am stuck with this homework:  rewrite the following program so that it can handle any invalid inputs from user.   l tried tried the try... except ValueError, but the program is still failing to run. ",python handling invalid inputs from a user,<python><exception><error-handling><invalid-characters>
53396944,"I've written some web-scraping code that is currently working, however quite slow. Some background: I am using Selenium as it requires several stages of clicks and entry, along with BeautifulSoup. My code is looking at a list of materials within subcategories on a website(image below) and scraping them. If the material scraped from the website is one of the 30 I am interested in (lst below), then it writes the number 1 to a dataframe which I later convert to an Excel sheet.   The reason it is so slow, I believe anyway, is due to the fact that there are a lot of exceptions. However, I am not sure how to handle these besides try/except. The main bits of code can be seen below, as the entire piece of code is quite lengthy. I have also attached an image of the website in question for reference.    Specifically, the i's and j's rarely go to 6,7 or 8 but when they do, it is important that I capture that information too. For context, the i's correspond to the number of different categories in the image below (Automative, Building materials etc.) whilst the j's represent the sub-list (car batteries and engine oil etc.). Because these two loops are repeated for all 30 sites for each code, and I have 1500 codes, this is extremely slow. Currently it is taking 6.5 minutes for 10 codes.  Is there a way I could improve this process? I tried list comprehension however it was difficult to handle errors like this and my results were no longer accurate. Could an ""if"" function be a better choice for this and if so, how would I incorporate it? I also would be happy to attach the full code if required. Thank you!    EDIT: by changing     to     it is now running almost twice as fast! Obviously it is best to exit to loop after it fails once, as the later iterations will also fail. However any other pythonic tips are still welcome :) ",Improve speed/performance of web-scraping with lots of exceptions,<python><exception><web-scraping><error-handling><try-catch>
51314925,I'm doing an application to download all files form a Telegram channel. When downloading I receive the error message:     Anyone know how to fix this? ,How to fix the Telethon's exception BadMessageError,<python><exception><error-handling><telethon>
51212178,"i have never done anything serious with python, but i found it very handy for what i wanted to do.I'd like to ask a simple question, how do i raise a custom exception if the third party class already raises it? I am using  This class to make asyncronous sql query on my database, and it raises ""UNIQUE constraint failed"" which is fine for me but i don't want it to log it. This is my simple code    The problem with this is that it never reaches my print and it prints his own excpetion. How do i make it shut up?   EDIT:  This piece of code made the logger suppress the unwanted message:logging.getLogger(""sqlite3worker"").setLevel(logging.CRITICAL) Thanks to @AChampion ",Python Custom Exception,<python><exception><error-handling>
49050030,I did this example but it does not run with the try and except handling errors in Python.        I tried:    I did other example and it was able to catch  I am using Jupyter notebook Python 3.  Any help in this matter is highly appreciated.  I am calling    ,Try and Except Python,<python><function><exception><error-handling><try-catch>
49015001,The following causes some additional strange output to be printed    Instead of only printing:        we get:     Sometimes I have even gotten:    ,How do we prevent warning from printing strange text at the end of its message?,<python><python-3.x><exception><error-handling><warnings>
45153588,   How would I keep track of exceptions so that I could find out whether   or not they have been handled or not?   Lets say I have some error handling code:    What I want to do is use the function I have built to handle errors I expect will happen on the users end. I would like to have a function that also creates an error window for users when an error occurs that I do not expect. Ideally this should only happen if an exception has occurred. So is there a way to identify and track specific exceptions so that I may handle the unexpected errors in a different way than the ones that I do expect? ,Keeping track of exceptions and whether or not they have been handled,<python><exception><error-handling><exception-handling>
44516268,"I am quite newby into dealing with exceptions in python.  Particularly I would like to create an exception when:    and another one when:    If i am right it shall be in both cases a  :    however I would like to carry out one code when one error arises and a different code when the other error arises,   How could I differentiate these 2 exceptions?   Thank you ",Differentiate errors arising in python,<python><exception><error-handling><exception-handling>
43751989,"I have this piece of code which loads a library, but then it dies. I've surrounded it with the try/except pass, but it still dies. Does anyone know how to get past the error and continue with the print statement below:          The error I get right after the library.load line of code is:   ",Except an error in Python from a loaded C library,<python><exception><error-handling>
41980401,"I'm writing a somewhat small python program and am concerned about the way I handle exceptions in my class methods and other functions. To be more precise, I'm trying to think over all the pros and cons of using  (aka ) vs . For instance, let's say, I've got the following function that prints the contents of a text file:    It's reasonable to check if the file provided to the function actually exists, so one way to do this is:    Another way would be to  which will then be intercepted and appropriately handled somewhere outside the function. At the first blush, it seems like using  saves you the trouble of writing additional lines of code (namely, the try-except-else block) and thus seems to be the way to go. So my question is: in cases like that, when do you have to go for the sys.exit and when would it be better to raise an appropriate exception/error? ",processing special cases in python using sys.exit vs raise SomeError,<python><exception><error-handling><exception-handling>
40722921,"When I ask for an attribute of a python object that does not exist, I get an AttributeError, however I have not found the name of the requested attribute among the fields of the error object. The only place which mentions the name of the requested attribute is  member of the error.  It seems to me a bit of an annoyance to parse the error message in order to get the name of the missing attribute. Is there any way to get the name of the missing attribute without parsing the error message?  Demo:   ",How to determine which attribute an AttributeError refers to?,<python><exception><error-handling><standard-library><anti-patterns>
40237349,"Lets say we have the following code:    If we want to handle the exceptions that those functions might arise what is the preferred way:    Full split of ""business"" code and error handling      Split of logic and error handling but try starting at the first statement that might raise      Exception handling should only wrap statements we expect to raise      Note that if we capture the exception we don't want to continue ",Correct extent of the exception handling block,<python><exception><error-handling><code-readability>
39892380,"My code downloads files from an online file storage web service and unzip them. To run my script, I give it a date as argument (as mentioned here below). I want to add an error message if the date did not match any documents.  So assuming that I have one month of data (July), a valid date is an existing folder wich contains informations about the date in question (example : 07Jul2016). Obviously, a wrong date is an unexisting folder in my online file storage web service (example : 18Aug2016).  This is what I'm supposed to do in my main function :    And obviously, this is my command line to run my script :    This is the code in question (This is just the try/except part):    So with a valid date, my code is normally running. With a wrong date, I have nothing. The error message is not displayed.  What might be wrong? Any help appreciated. Thx ! ",Python Exceptions Handling : Exception don't work,<python><exception><error-handling><exception-handling><try-catch>
31514257,The below code catches  exceptions:      The problem is that when I use general purpose  it fails to catch  errors:      For the time being I use to error handler one for  and another for other errors. Why  exceptions are not caught by the second one? Is there a way to use one ?  EDIT: routes are handles by both  and .  is used for handling resources and  for those who are not applicable to resources. ,Invalid routes are not caught by @app.errorhandler(Exception) in flask,<python><exception><error-handling><flask>
31146855,"This is probably a really silly error, but alas I am relatively new to Python and I find this error perplexing so any help would be appreciated. It's probably a relatively simple error, but searches on the site have so far not solved the issue. Here is the method that is giving me all of these problems:    The exception from this line     is being thrown even though it's inside of not one but TWO catch blocks. I am trying to figure out what the issue could be and any help would be appreciated.   Here is the traceback:   ",Python IndexError being thrown even though it's inside two except blocks,<python><python-2.7><exception><error-handling><runtimeexception>
30834172,"I have some code that iterates through a series of URLs. If there is an error in my code because one of the URLs does not contain a valid JSON body, I want the error generated to be printed to screen, but then the code moves onto the next iteration. A simple version of my code is:    However this prints the error to screen and ends execution of the code. Is there a way I can get the error to continue execution by moving to the next iteration of my 'for' loop? ",Print error to screen but continue code execution,<python><exception><error-handling>
25523361,"I'm running some terminal commands from within Python using the subprocess.check_output() call. This works all fine when it returns correct results. When interacting with the bitcoin daemon I can get several responses however. For example, the raw output (as seen on a normal bash command line) can be:    or    Both these responses give an error code 1 however. I tried printing out the following attributes of the , which in both cases results in the same outputs (except for the  attribute of course:    I guess the only thing that distincts the two errors, is the raw string that is outputted on the command line which I listed above. So my question is: how can I get the raw string that is shown on the command line from within Python? ",How to know the exact output from a Python subprocess.check_output() call?,<python><bash><exception><error-handling>
24522290,"Try as I might, I can't seem to catch the sqlalchemy IntegrityError correctly:    As what one might expect:    I've tried to explicitly:    UPDATE:  I found something that seems to fit what's happening here, where Integrity Error isn't thrown until the session is flushed to the db, and after the /blocks have been executed: Trying to catch integrity error with SQLAlchemy  However, adding  in the  block yields an :   ",cannot catch SQLAlchemy IntegrityError,<python><exception><exception-handling><error-handling><sqlalchemy>
22338300,"I use this code to write into a  file when there is an uncaught exception :     Exemple of output :    How to customize the logging and have this instead :      ?  (note :   is the number of the line where the error occured,  is the current file)  PS : I thought about parsing these 4 lines, search for ""line"" in the second line, extract the  nearby, etc.   but that's a rather dirty method, and I imagine this won't work robustly ",Customize traceback output,<python><exception><logging><error-handling><traceback>
22132272,"I'm new to Python and struggling with handling self-defined errors. When my code spots the error, I want it to throw an error in red font and take me back to the Python terminal without killing Python.  I came across sys.exit() looking for an answer, but it quits Python completely. Do you know of an alternative that throws back an error in red font and takes me back to the terminal?  This is what I have so far.    Please let me know if I'm not clear and I'll be happy to provide more details. Thank you all in advance! ","How to quit Python function, throwing error statement without quitting Python interpreter",<python><function><exception><error-handling><quit>
17784849,"I've seen similar questions to this one but none of them really address the trackback. If I have a class like so    What I want my execute method to be able to do is if self._then is not equal to the string ""THEN"" (in allcaps) then I want it to raise a custom error message and terminate the whole  program while also not showing a traceback.  If the error is encountered the only thing that should print out would look something like (I'm using 3 as an example, formatting is not a problem) this.    I'm not very picky about it actually being an exception class object, so there's no issue in that aspect. Since I will be using this in a while loop, simple if, elif just repeats the message over and over (because obviously I am not closing the loop). I have seen sys.exit() but that also prints out a giant block of red text, unless I am not using it correctly. I don't want to catch the exception in my loop because there are other classes in the same module in which I need to implement something like this. ",Print an error message without printing a traceback and close the program when a condition is not met,<python><exception><error-handling><customization><traceback>
10324558,"Is there any way, how to find out line of code, where I called: raise MyError(""something"")??  I have code like this:    Can I get the line of exception in this class?  Calling like this:    Thank you ",Get line of exception in my own exception class,<exception><error-handling><python-3.2>
9979735,"I looking for a ""the way its meant to be done"" solution for the next problem:  I have a class called , which takes an input file, checks the content of it, and if all is well, returns the file to next class () for further actions.  However, if the file is not in the form as it should be,  generates an error message which says on which line of the file the error was found.   doesn't print the error, it just generates the message which is printed later.  Since I'm doing it in python my method can return a file or a string. How to do a check if the file is ok without the need of including an additional flag? ",Best return type policy in python,<python><exception><exception-handling><error-handling>
3950505,"I know try/except can handle errors in my program. But, is there a way of making the error be displayed in the program execution, be ignored and let the execution go on? ",How to see the error and still keep the program on in the Python shell?,<python><exception><exception-handling><error-handling>
57518776,"I have two potential file-paths where my application can read specific data from. If one fails, I want it to read from the other.    My intuitive attempt to do so was with try...except clauses, having something as below:    However, this does not seem to work as intuitively expected. The second IOError is never caught. Why is this the case? Is there any ""clean"" way to read from one file path or the other without having to manually check ? ",What's the most clean and pythonic way to load data from one of two file paths? Why can't I catch two of the same Exceptions?,<python><file><exception><error-handling>
64904160,I am trying to use the following code below to try and catch connection errors and what not when I am web scraping. I basically would like to run the code and leave it to do its thing until done so if it gets one of the following errors it just sleeps then tries again. I appreciate that the code isnt exactly replicable but it doesnt always happen sometimes I can run the code which scrapes a few thousand web pages and there will be no errors at all. Other times I have to keep manually starting it again and again. I think originally I borrowed the exceptions from this site but I cant remember where. I was just wondering why the errors are not being caught and instead crashing my code instead of closing down the webdriver recording that the link was broken for another part of my code to start a new webdriver using selenium.  ,Catching connection errors and alike when web scraping,<python><exception><web-scraping><error-handling>
64869794,"[First, I'm sorry for my bad english] I'm as user not programmer in here, I'm challenged by my teacher to input something in this program to make a non value error or zerodivision error so that the program show the last except . What should I input?  ","I'm as a user, what should I input to cause a non value-error or zerodivision-error in this code? #python",<python><exception><error-handling>
64867908," For example, I would like to store the exception into a variable named &quot;Error Log&quot; insert insert the variable into a SQLite table? ",How to capture Exception and use as a normal variable?,<python-3.x><sqlite><variables><exception><error-handling>
62107561,"I'm trying to web scraping.  using BeautifulSoup, i'm parsing several objects and confronted with a problem.  The problem is, i can't predict where the error occur using ""find"" method.  it looks like    among a,b,c,d,e,f, error can happen anywhere and their code should not be revised.  the variable 'b' is not matter because it would be None, which is ok.  but variable 'a' or 'f' is problem, because it would end the script.  i know there is ""try - exception"" grammar but that's not what i want. of course it can be written like this:    looks ridiculous, doesnt it?  how can i handle it gracefully?  ",how can i ignore error in python properly?,<python><exception><error-handling><beautifulsoup>
61917457,I have a simple python code to open the .csv file and check for exceptions. The file exists in my current folder and it has more than 2 lines of data. But the for loop in the else part is not executing.. because I'm getting zero lines to count.    I was able to see the output of the file name and success message from the else part but not the for loop part. There were no exceptions occurred and so the file was never closed before else part. What could be the problem?  Solved   with the help of @Ralf answer. ,File has zero lines in else block of python try except code,<python><python-3.x><exception><error-handling>
61895157,"I'm trying to use try/except for error handling working with the pygsheets library. My code is as follows:    when the worksheet does not exist, i want to create a new worksheet. however, i get the error 'WorksheetNotFound' is not defined. i understand that I haven't defined the term WorksheetNotFound anywhere in my code, but my understanding was that the 'except' statement would catch any error of the 'WorksheetNotFound' type (this is the error I get when trying to access a worksheet that does not exist). Does try/except not work with all errors? Or are there only certain types of errors that an except statement recognizes? Thanks! ",name 'WorksheetNotFound' is not defined,<python><exception><error-handling><try-except><pygsheets>
